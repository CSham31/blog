{"meta":{"exported_on":1636590043431,"version":"4.22.1"},"data":{"posts":[{"id":"5fd7c9d9e73c930ae908ba46","uuid":"2af3bf09-497c-4f42-b829-3650f798db43","title":"Getting Started with Arduino","slug":"arduino_s1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> Arduino is an open-source electronics platform based on easy-to-use hardware and software\\n\\nThis series will help you to understand what is Arduino, This article is based on how to use Arduino IDE, how to set up your first sketch etc.\\n\\n### Things you will need \\n     a Laptop or PC\\n     Arduino IDE\\n     an Arduino board \\n     a Serial cable \\n\\n**First** you should [download](https://www.arduino.cc/en/Main/Software) the **Arduino IDE**. Make sure you download the correct software for your operating system. install it.install the necessary drivers (will pop-up while installing IDE). For some Arduino compatible boards comes with different drivers. As an example some **Arduino nano** comes with **CH340 driver**. You have to manually download and install them.[Here](https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all#drivers-if-you-need-them) CH340 drivers on Sparkfun.\\n\"}],[\"image\",{\"src\":\"/content/images/2020/12/download.jpg\",\"width\":871,\"height\":403,\"caption\":\"Download&nbsp;\"}],[\"markdown\",{\"markdown\":\"**Next** plug your Arduino to PC or Laptop.Then go to Device Manager.\\nIn windows pc go to *Control panel> Device Manager > Ports >* your device should be show up here. if it is not there you have to **reinstall** drivers.In mac OS there is no \\\"Device Manager\\\". Check *menu > About this Mac > System Report...> USB*. \\n\"}],[\"image\",{\"src\":\"/content/images/2020/12/devicem.jpg\",\"width\":484,\"height\":372,\"caption\":\"Device Manager\"}],[\"markdown\",{\"markdown\":\"**Now** open the Arduino IDE.First of all go to Tools> Board> select you board in my example Arduino Uno. Then below the boards select your *COM port > (in my case) COM9.*\\n\"}],[\"image\",{\"src\":\"/content/images/2020/12/com.jpg\",\"width\":875,\"height\":656}],[\"markdown\",{\"markdown\":\"**Now you can start your coding.** \\nIf you are not familiar with coding don't worry. you can use examples built-in. go to *files > examples > basic > blink* .\\n\"}],[\"image\",{\"src\":\"/content/images/2020/12/blink.jpg\",\"width\":879,\"height\":658,\"caption\":\"Blink.ino\"}],[\"markdown\",{\"markdown\":\"then **save** the sketch, **compile** it. click **upload**. wait and enjoy !!\\n(from left to right : compile , upload , new file, open, save, serial monitor)\"}],[\"image\",{\"src\":\"/content/images/2020/12/tabs.jpg\",\"width\":869,\"height\":89}],[\"code\",{\"code\":\"// the setup function runs once when you press reset or power the board\\nvoid setup() {\\n  // initialize digital pin LED_BUILTIN as an output.\\n  pinMode(LED_BUILTIN, OUTPUT);\\n}\\n\\n// the loop function runs over and over again forever\\nvoid loop() {\\n  digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)\\n  delay(1000);                       // wait for a second\\n  digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW\\n  delay(1000);                       // wait for a second\\n}\",\"language\":\"\",\"caption\":\"Blink sketch\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[1,\"p\",[]],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><blockquote>\n<p>Arduino is an open-source electronics platform based on easy-to-use hardware and software</p>\n</blockquote>\n<p>This series will help you to understand what is Arduino, This article is based on how to use Arduino IDE, how to set up your first sketch etc.</p>\n<h3 id=\"thingsyouwillneed\">Things you will need</h3>\n<pre><code> a Laptop or PC\n Arduino IDE\n an Arduino board \n a Serial cable \n</code></pre>\n<p><strong>First</strong> you should <a href=\"https://www.arduino.cc/en/Main/Software\">download</a> the <strong>Arduino IDE</strong>. Make sure you download the correct software for your operating system. install it.install the necessary drivers (will pop-up while installing IDE). For some Arduino compatible boards comes with different drivers. As an example some <strong>Arduino nano</strong> comes with <strong>CH340 driver</strong>. You have to manually download and install them.<a href=\"https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all#drivers-if-you-need-them\">Here</a> CH340 drivers on Sparkfun.</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"/content/images/2020/12/download.jpg\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/12/download.jpg 600w, /content/images/2020/12/download.jpg 871w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Download&nbsp;</figcaption></figure><!--kg-card-begin: markdown--><p><strong>Next</strong> plug your Arduino to PC or Laptop.Then go to Device Manager.<br>\nIn windows pc go to <em>Control panel&gt; Device Manager &gt; Ports &gt;</em> your device should be show up here. if it is not there you have to <strong>reinstall</strong> drivers.In mac OS there is no &quot;Device Manager&quot;. Check <em>menu &gt; About this Mac &gt; System Report...&gt; USB</em>.</p>\n<!--kg-card-end: markdown--><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"/content/images/2020/12/devicem.jpg\" class=\"kg-image\" alt><figcaption>Device Manager</figcaption></figure><!--kg-card-begin: markdown--><p><strong>Now</strong> open the Arduino IDE.First of all go to Tools&gt; Board&gt; select you board in my example Arduino Uno. Then below the boards select your <em>COM port &gt; (in my case) COM9.</em></p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2020/12/com.jpg\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/12/com.jpg 600w, /content/images/2020/12/com.jpg 875w\" sizes=\"(min-width: 720px) 720px\"></figure><!--kg-card-begin: markdown--><p><strong>Now you can start your coding.</strong><br>\nIf you are not familiar with coding don't worry. you can use examples built-in. go to <em>files &gt; examples &gt; basic &gt; blink</em> .</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"/content/images/2020/12/blink.jpg\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/12/blink.jpg 600w, /content/images/2020/12/blink.jpg 879w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Blink.ino</figcaption></figure><!--kg-card-begin: markdown--><p>then <strong>save</strong> the sketch, <strong>compile</strong> it. click <strong>upload</strong>. wait and enjoy !!<br>\n(from left to right : compile , upload , new file, open, save, serial monitor)</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2020/12/tabs.jpg\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/12/tabs.jpg 600w, /content/images/2020/12/tabs.jpg 869w\" sizes=\"(min-width: 720px) 720px\"></figure><figure class=\"kg-card kg-code-card\"><pre><code>// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)\n  delay(1000);                       // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW\n  delay(1000);                       // wait for a second\n}</code></pre><figcaption>Blink sketch</figcaption></figure>","comment_id":"5ef6f4006b3efa0052de2974","plaintext":"> Arduino is an open-source electronics platform based on easy-to-use hardware and\nsoftware\n\n\nThis series will help you to understand what is Arduino, This article is based\non how to use Arduino IDE, how to set up your first sketch etc.\n\nThings you will need\n a Laptop or PC\n Arduino IDE\n an Arduino board \n a Serial cable \n\n\nFirst you should download [https://www.arduino.cc/en/Main/Software] the Arduino\nIDE. Make sure you download the correct software for your operating system.\ninstall it.install the necessary drivers (will pop-up while installing IDE). For\nsome Arduino compatible boards comes with different drivers. As an example some \nArduino nano comes with CH340 driver. You have to manually download and install\nthem.Here\n[https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all#drivers-if-you-need-them] \nCH340 drivers on Sparkfun.\n\nDownloadNext plug your Arduino to PC or Laptop.Then go to Device Manager.\nIn windows pc go to Control panel> Device Manager > Ports > your device should\nbe show up here. if it is not there you have to reinstall drivers.In mac OS\nthere is no \"Device Manager\". Check menu > About this Mac > System Report...>\nUSB.\n\n\n\nDevice ManagerNow open the Arduino IDE.First of all go to Tools> Board> select you board in my\nexample Arduino Uno. Then below the boards select your COM port > (in my case)\nCOM9.\n\nNow you can start your coding.\nIf you are not familiar with coding don't worry. you can use examples built-in.\ngo to files > examples > basic > blink .\n\nBlink.inothen save the sketch, compile it. click upload. wait and enjoy !!\n(from left to right : compile , upload , new file, open, save, serial monitor)\n\n// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)\n  delay(1000);                       // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW\n  delay(1000);                       // wait for a second\n}\n\nBlink sketch","feature_image":"https://images.unsplash.com/photo-1562976540-78c559c80296?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-06-27 07:23:44","created_by":"1","updated_at":"2020-12-15 19:50:12","updated_by":"1","published_at":"2020-06-27 07:34:16","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd7c9d9e73c930ae908ba47","uuid":"e4b452ad-3160-4a98-bbaf-1c65dfc1bce4","title":"Code in Arduino","slug":"code_in_arduino","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> In my experience, Arduino is very simple and easy to learn than many other languages. This language basically has 3 parts.  \\n\\n1.     Functions\\n2.     Values (variables and constants)\\n3.     structures\\n\\n### Functions\\n\\nLike in mathematics, these functions can describe some characteristics, or it does some certain tasks. I will explain the basic functions that we use every time.\\n\\n**Digital I/O**\\n\\ndigitalRead() read value from specified digital pin either HIGH (1) or LOW (0).\\nsyntax | `digitalRead(pin);` \\nreturns : HIGH (1) or LOW(0)\\n\\ndigitalWrite() Write HIGH (1) or LOW (0) value to specified digital pin.  \\nsyntax | `digitalWrite(pin, value);` \\nreturns : Nothing\\n\\npinMode() set the behavior of a digital pin to act as an INPUT or OUTPUT. Also, you can enable internal pull-up resistors by INPUT_PULLUP. using only INPUT will disable internal pull-up resistors.\\n\\nsyntax | `pinMode(pin, mode); `\\nreturns: Nothing\\n\\n\\nanalogRead() read value from specified analog pin.Most of the Arduino boards support 10 bit Max resolution (0-1023) and Arduino has multichannel ADC (analog to digital converter).\\n\\nThis function actually maps the input voltage 0 and operating voltage ( 5 or 3.3 depending on your board. Atmega bases Arduino board ( Uno, Mega, Nano,...)  takes 100 microseconds to read the input voltage.\\n\\nsyntax | `analogRead(pin);`\\nreturns: value in between 0-1023  as your input voltage. read more.\\n\\nanalogWrite() Write an analog value to a specified analog pin. Actually this function writes analog value using PWM Wave (Pulse Width Modulation). Boards support PWM frequencies.\\ncheck here.\\n\\nsyntax | `analogWrite(pin, value);` \\nvalue is the duty cycle, an integer value between 0-255.\\nreturns: Nothing\\n\\ndelay() hold/pause the program for a specified time (in milliseconds). \\n\\n1000 milliseconds=1 second.\\n\\nsyntax | `delay(value in ms);`\\nvalue is an unsigned long.\\n\\nreturns: Nothing\\n\\ndelayMicroseconds() hold/pause the program for a specified time (in microseconds). \\n\\nsyntax |` delay(value in us);`\\nvalue is an unsigned int.\\n\\nreturns: Nothing\\n\\nmillis() return the elapsed time in milliseconds since the program began.\\n\\nsyntax | `millis();`\\n\\nreturns: the time left in milliseconds as unsigned long. this will overflow(become zero) like after 50days.\\n\\nmicros() return the elapsed time in microseconds since the program began.\\n\\nsyntax | `micros();`\\n\\nreturns: the time left in microseconds as unsigned long.\\n\\nAnd finally, Arduino language is based on C/C++, therefore, things you type after // is known as a comment. it will not affect the program. \\n\"}],[\"code\",{\"code\":\"// this is a comment\\n\\n/* this is how \\nto comment a paragraph */\"}],[\"markdown\",{\"markdown\":\"Look at the example blink code again and try it without delay().\\n\\nThe answer can be found on [arduino.cc.](https://www.arduino.cc/en/Tutorial/BlinkWithoutDelay)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><blockquote>\n<p>In my experience, Arduino is very simple and easy to learn than many other languages. This language basically has 3 parts.</p>\n</blockquote>\n<ol>\n<li>\n<pre><code>Functions\n</code></pre>\n</li>\n<li>\n<pre><code>Values (variables and constants)\n</code></pre>\n</li>\n<li>\n<pre><code>structures\n</code></pre>\n</li>\n</ol>\n<h3 id=\"functions\">Functions</h3>\n<p>Like in mathematics, these functions can describe some characteristics, or it does some certain tasks. I will explain the basic functions that we use every time.</p>\n<p><strong>Digital I/O</strong></p>\n<p>digitalRead() read value from specified digital pin either HIGH (1) or LOW (0).<br>\nsyntax | <code>digitalRead(pin);</code><br>\nreturns : HIGH (1) or LOW(0)</p>\n<p>digitalWrite() Write HIGH (1) or LOW (0) value to specified digital pin.<br>\nsyntax | <code>digitalWrite(pin, value);</code><br>\nreturns : Nothing</p>\n<p>pinMode() set the behavior of a digital pin to act as an INPUT or OUTPUT. Also, you can enable internal pull-up resistors by INPUT_PULLUP. using only INPUT will disable internal pull-up resistors.</p>\n<p>syntax | <code>pinMode(pin, mode); </code><br>\nreturns: Nothing</p>\n<p>analogRead() read value from specified analog pin.Most of the Arduino boards support 10 bit Max resolution (0-1023) and Arduino has multichannel ADC (analog to digital converter).</p>\n<p>This function actually maps the input voltage 0 and operating voltage ( 5 or 3.3 depending on your board. Atmega bases Arduino board ( Uno, Mega, Nano,...)  takes 100 microseconds to read the input voltage.</p>\n<p>syntax | <code>analogRead(pin);</code><br>\nreturns: value in between 0-1023  as your input voltage. read more.</p>\n<p>analogWrite() Write an analog value to a specified analog pin. Actually this function writes analog value using PWM Wave (Pulse Width Modulation). Boards support PWM frequencies.<br>\ncheck here.</p>\n<p>syntax | <code>analogWrite(pin, value);</code><br>\nvalue is the duty cycle, an integer value between 0-255.<br>\nreturns: Nothing</p>\n<p>delay() hold/pause the program for a specified time (in milliseconds).</p>\n<p>1000 milliseconds=1 second.</p>\n<p>syntax | <code>delay(value in ms);</code><br>\nvalue is an unsigned long.</p>\n<p>returns: Nothing</p>\n<p>delayMicroseconds() hold/pause the program for a specified time (in microseconds).</p>\n<p>syntax |<code> delay(value in us);</code><br>\nvalue is an unsigned int.</p>\n<p>returns: Nothing</p>\n<p>millis() return the elapsed time in milliseconds since the program began.</p>\n<p>syntax | <code>millis();</code></p>\n<p>returns: the time left in milliseconds as unsigned long. this will overflow(become zero) like after 50days.</p>\n<p>micros() return the elapsed time in microseconds since the program began.</p>\n<p>syntax | <code>micros();</code></p>\n<p>returns: the time left in microseconds as unsigned long.</p>\n<p>And finally, Arduino language is based on C/C++, therefore, things you type after // is known as a comment. it will not affect the program.</p>\n<!--kg-card-end: markdown--><pre><code>// this is a comment\n\n/* this is how \nto comment a paragraph */</code></pre><!--kg-card-begin: markdown--><p>Look at the example blink code again and try it without delay().</p>\n<p>The answer can be found on <a href=\"https://www.arduino.cc/en/Tutorial/BlinkWithoutDelay\">arduino.cc.</a></p>\n<!--kg-card-end: markdown-->","comment_id":"5ef6faf26b3efa0052de29fe","plaintext":"> In my experience, Arduino is very simple and easy to learn than many other\nlanguages. This language basically has 3 parts.\n\n\n 1. Functions\n    \n    \n    \n 2. Values (variables and constants)\n    \n    \n    \n 3. structures\n    \n    \n    \n\nFunctions\nLike in mathematics, these functions can describe some characteristics, or it\ndoes some certain tasks. I will explain the basic functions that we use every\ntime.\n\nDigital I/O\n\ndigitalRead() read value from specified digital pin either HIGH (1) or LOW (0).\nsyntax | digitalRead(pin);\nreturns : HIGH (1) or LOW(0)\n\ndigitalWrite() Write HIGH (1) or LOW (0) value to specified digital pin.\nsyntax | digitalWrite(pin, value);\nreturns : Nothing\n\npinMode() set the behavior of a digital pin to act as an INPUT or OUTPUT. Also,\nyou can enable internal pull-up resistors by INPUT_PULLUP. using only INPUT will\ndisable internal pull-up resistors.\n\nsyntax | pinMode(pin, mode); \nreturns: Nothing\n\nanalogRead() read value from specified analog pin.Most of the Arduino boards\nsupport 10 bit Max resolution (0-1023) and Arduino has multichannel ADC (analog\nto digital converter).\n\nThis function actually maps the input voltage 0 and operating voltage ( 5 or 3.3\ndepending on your board. Atmega bases Arduino board ( Uno, Mega, Nano,...) takes\n100 microseconds to read the input voltage.\n\nsyntax | analogRead(pin);\nreturns: value in between 0-1023 as your input voltage. read more.\n\nanalogWrite() Write an analog value to a specified analog pin. Actually this\nfunction writes analog value using PWM Wave (Pulse Width Modulation). Boards\nsupport PWM frequencies.\ncheck here.\n\nsyntax | analogWrite(pin, value);\nvalue is the duty cycle, an integer value between 0-255.\nreturns: Nothing\n\ndelay() hold/pause the program for a specified time (in milliseconds).\n\n1000 milliseconds=1 second.\n\nsyntax | delay(value in ms);\nvalue is an unsigned long.\n\nreturns: Nothing\n\ndelayMicroseconds() hold/pause the program for a specified time (in\nmicroseconds).\n\nsyntax | delay(value in us);\nvalue is an unsigned int.\n\nreturns: Nothing\n\nmillis() return the elapsed time in milliseconds since the program began.\n\nsyntax | millis();\n\nreturns: the time left in milliseconds as unsigned long. this will\noverflow(become zero) like after 50days.\n\nmicros() return the elapsed time in microseconds since the program began.\n\nsyntax | micros();\n\nreturns: the time left in microseconds as unsigned long.\n\nAnd finally, Arduino language is based on C/C++, therefore, things you type\nafter // is known as a comment. it will not affect the program.\n\n// this is a comment\n\n/* this is how \nto comment a paragraph */\n\nLook at the example blink code again and try it without delay().\n\nThe answer can be found on arduino.cc.\n[https://www.arduino.cc/en/Tutorial/BlinkWithoutDelay]","feature_image":"https://images.unsplash.com/photo-1504639725590-34d0984388bd?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-06-27 07:53:22","created_by":"1","updated_at":"2020-12-24 21:46:27","updated_by":"1","published_at":"2020-06-27 08:00:04","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd7c9d9e73c930ae908ba48","uuid":"40f1f6dd-12a6-4f69-beb4-e0954d1ed1b2","title":"Variables","slug":"variables","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"Variable is a specific name that you have assign on a data, sensor input, or constant that you will use later in the program.\\n\\n#### Declaring Variables\\nBefore using variables you need to specify what type variable is it, name of the variable, and initial value(optional). The name of the variable should obey the following rules.\\n* Variables can consist of both uppercase (A-Z) and lowercase(a-z) letters, numbers 0 to 9, but cannot start with a number.\\n* Variables can not be the same names as Arduino keywords.\\n* Variables must have unique names for each.\\n* Variable names are case sensitive.\\n* Variables may not contain any special characters, except the underscore\\n\\n#### Variable Scope\\nWhere you should specify the variable is called variable scope. The program will be different by where did you define the variable.\\n\\n#### Initializing Variables\\nYou can initialize a variable if they were declared or not. But you should beware before initializing a variable, whether it has a valid data or not.\\n\\n#### Variable Rollover\\neach variable type has a maximum/minimum size or capacity. When the variable exceeded the maximum, the variable become roll over. \\neg:-\\n        `x = 255; // 0-255 is the capacity`\\n        `x =x+1; // now x is exceed 255 and now x contains 0 - rolls over`\\n\\nthis is possible with the minimum too.\\neg:-\\n     `byte x ;`\\n      `x = 0 ;`\\n      `x = x - 1 ;       // x now contains 255 - rolls over in neg. direction`\\n\\n### using variables\\nafter you have assigned the variable, you can set the variable equal to the value you wished to store on that variable.\\n\\nVoltageinput = 0;             \\nVoltageinput = analogRead(2); // set variable to analog pin 2 readings.\\n                               \\n### types of variables\\nthere are many variable types. You should consider the type of variable because each type of variable has limitations. You can not use variables without having a clear idea of how your variable behaves in the program.\\n    \\n **char** - used to store a character value. written in single quotes 'A'. stored as numbers. (in the ASCII value of the character) The size of the char data type is at least 8 bits. \\n  \\n **String** - used to store multiple characters. written in double quotes \\\"ABC\\\".Mostly like an array of characters.\\n \\n **byte** - stores an 8-bit unsigned number, from 0 to 255\\n   \\n **int** - primary data-type for numbers.Stores a 2 byte signed integer value in the range of -32,768 to 32,767.\\n \\n **long**-extended size variables for number storage, and store 4 bytes, in range of -2,147,483,648 to 2,147,483,647.\\n \\n **float** -Datatype for floating-point numbers, a number that has a decimal point, and store 4 bytes.in the range of as large as 3.4028235E+38 and as low as -3.4028235E+38\\n \\n **double**- Double-precision floating-point number. On some boards based on ATmega like Uno has 4-byte size with no gain in precision. In Arduino Due, doubles have 8-byte (64 bit) precision.\\n\\nI will describe more about data types with related projects and programs.Without clear knowledge, you will have to experience unpredictable outcomes. \\n    \\n>     stay tuned...\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>Variable is a specific name that you have assign on a data, sensor input, or constant that you will use later in the program.</p>\n<h4 id=\"declaringvariables\">Declaring Variables</h4>\n<p>Before using variables you need to specify what type variable is it, name of the variable, and initial value(optional). The name of the variable should obey the following rules.</p>\n<ul>\n<li>Variables can consist of both uppercase (A-Z) and lowercase(a-z) letters, numbers 0 to 9, but cannot start with a number.</li>\n<li>Variables can not be the same names as Arduino keywords.</li>\n<li>Variables must have unique names for each.</li>\n<li>Variable names are case sensitive.</li>\n<li>Variables may not contain any special characters, except the underscore</li>\n</ul>\n<h4 id=\"variablescope\">Variable Scope</h4>\n<p>Where you should specify the variable is called variable scope. The program will be different by where did you define the variable.</p>\n<h4 id=\"initializingvariables\">Initializing Variables</h4>\n<p>You can initialize a variable if they were declared or not. But you should beware before initializing a variable, whether it has a valid data or not.</p>\n<h4 id=\"variablerollover\">Variable Rollover</h4>\n<p>each variable type has a maximum/minimum size or capacity. When the variable exceeded the maximum, the variable become roll over.<br>\neg:-<br>\n<code>x = 255; // 0-255 is the capacity</code><br>\n<code>x =x+1; // now x is exceed 255 and now x contains 0 - rolls over</code></p>\n<p>this is possible with the minimum too.<br>\neg:-<br>\n<code>byte x ;</code><br>\n<code>x = 0 ;</code><br>\n<code>x = x - 1 ;       // x now contains 255 - rolls over in neg. direction</code></p>\n<h3 id=\"usingvariables\">using variables</h3>\n<p>after you have assigned the variable, you can set the variable equal to the value you wished to store on that variable.</p>\n<p>Voltageinput = 0;<br>\nVoltageinput = analogRead(2); // set variable to analog pin 2 readings.</p>\n<h3 id=\"typesofvariables\">types of variables</h3>\n<p>there are many variable types. You should consider the type of variable because each type of variable has limitations. You can not use variables without having a clear idea of how your variable behaves in the program.</p>\n<p><strong>char</strong> - used to store a character value. written in single quotes 'A'. stored as numbers. (in the ASCII value of the character) The size of the char data type is at least 8 bits.</p>\n<p><strong>String</strong> - used to store multiple characters. written in double quotes &quot;ABC&quot;.Mostly like an array of characters.</p>\n<p><strong>byte</strong> - stores an 8-bit unsigned number, from 0 to 255</p>\n<p><strong>int</strong> - primary data-type for numbers.Stores a 2 byte signed integer value in the range of -32,768 to 32,767.</p>\n<p><strong>long</strong>-extended size variables for number storage, and store 4 bytes, in range of -2,147,483,648 to 2,147,483,647.</p>\n<p><strong>float</strong> -Datatype for floating-point numbers, a number that has a decimal point, and store 4 bytes.in the range of as large as 3.4028235E+38 and as low as -3.4028235E+38</p>\n<p><strong>double</strong>- Double-precision floating-point number. On some boards based on ATmega like Uno has 4-byte size with no gain in precision. In Arduino Due, doubles have 8-byte (64 bit) precision.</p>\n<p>I will describe more about data types with related projects and programs.Without clear knowledge, you will have to experience unpredictable outcomes.</p>\n<blockquote>\n<pre><code>stay tuned...\n</code></pre>\n</blockquote>\n<!--kg-card-end: markdown-->","comment_id":"5ef767916b3efa0052de2a54","plaintext":"Variable is a specific name that you have assign on a data, sensor input, or\nconstant that you will use later in the program.\n\nDeclaring Variables\nBefore using variables you need to specify what type variable is it, name of the\nvariable, and initial value(optional). The name of the variable should obey the\nfollowing rules.\n\n * Variables can consist of both uppercase (A-Z) and lowercase(a-z) letters,\n   numbers 0 to 9, but cannot start with a number.\n * Variables can not be the same names as Arduino keywords.\n * Variables must have unique names for each.\n * Variable names are case sensitive.\n * Variables may not contain any special characters, except the underscore\n\nVariable Scope\nWhere you should specify the variable is called variable scope. The program will\nbe different by where did you define the variable.\n\nInitializing Variables\nYou can initialize a variable if they were declared or not. But you should\nbeware before initializing a variable, whether it has a valid data or not.\n\nVariable Rollover\neach variable type has a maximum/minimum size or capacity. When the variable\nexceeded the maximum, the variable become roll over.\neg:-\nx = 255; // 0-255 is the capacity\nx =x+1; // now x is exceed 255 and now x contains 0 - rolls over\n\nthis is possible with the minimum too.\neg:-\nbyte x ;\nx = 0 ;\nx = x - 1 ; // x now contains 255 - rolls over in neg. direction\n\nusing variables\nafter you have assigned the variable, you can set the variable equal to the\nvalue you wished to store on that variable.\n\nVoltageinput = 0;\nVoltageinput = analogRead(2); // set variable to analog pin 2 readings.\n\ntypes of variables\nthere are many variable types. You should consider the type of variable because\neach type of variable has limitations. You can not use variables without having\na clear idea of how your variable behaves in the program.\n\nchar - used to store a character value. written in single quotes 'A'. stored as\nnumbers. (in the ASCII value of the character) The size of the char data type is\nat least 8 bits.\n\nString - used to store multiple characters. written in double quotes\n\"ABC\".Mostly like an array of characters.\n\nbyte - stores an 8-bit unsigned number, from 0 to 255\n\nint - primary data-type for numbers.Stores a 2 byte signed integer value in the\nrange of -32,768 to 32,767.\n\nlong-extended size variables for number storage, and store 4 bytes, in range of\n-2,147,483,648 to 2,147,483,647.\n\nfloat -Datatype for floating-point numbers, a number that has a decimal point,\nand store 4 bytes.in the range of as large as 3.4028235E+38 and as low as\n-3.4028235E+38\n\ndouble- Double-precision floating-point number. On some boards based on ATmega\nlike Uno has 4-byte size with no gain in precision. In Arduino Due, doubles have\n8-byte (64 bit) precision.\n\nI will describe more about data types with related projects and programs.Without\nclear knowledge, you will have to experience unpredictable outcomes.\n\n> stay tuned...","feature_image":"https://images.unsplash.com/photo-1527474305487-b87b222841cc?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-06-27 15:36:49","created_by":"1","updated_at":"2020-06-27 18:22:02","updated_by":null,"published_at":"2020-06-27 15:52:17","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd7c9d9e73c930ae908ba49","uuid":"d8241100-1ff6-40f4-bc52-ddcdd6be76aa","title":"Dark IDE","slug":"dark-ide","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> Bored with regular IDE. Try this\\n\\nDark themed apps, webisites are popular these day because it eye catching. You can easily do this for Arduino IDE (ver 1.8.5 or higher) \\n\\n1. **First** go [this](https://github.com/jeffThompson/DarkArduinoTheme) git repo and **download**.\\n\\n2. **Navigate** to lib folder on your device\\n    for Windows `C:\\\\Program Files (x86)\\\\Arduino\\\\lib`\\n    for Mac `/Applications/Arduino.app/Contents/Java/lib`\\n    for Linux `/usr/share/arduino/lib/`\\n3. **Replace** the theme folder from the downloaded one. In case you need to revert make a **Copy** of original files.\\n4. **Restart** the Arduino IDE.\\n\\n> Ta Da\"}],[\"gallery\",{\"images\":[{\"fileName\":\"dark.jpg\",\"row\":0,\"width\":1920,\"height\":1042,\"src\":\"/content/images/2021/02/dark.jpg\"},{\"fileName\":\"light.jpg\",\"row\":0,\"width\":1913,\"height\":1036,\"src\":\"/content/images/2021/02/light.jpg\"}],\"caption\":\"Dark vs Light\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><blockquote>\n<p>Bored with regular IDE. Try this</p>\n</blockquote>\n<p>Dark themed apps, webisites are popular these day because it eye catching. You can easily do this for Arduino IDE (ver 1.8.5 or higher)</p>\n<ol>\n<li>\n<p><strong>First</strong> go <a href=\"https://github.com/jeffThompson/DarkArduinoTheme\">this</a> git repo and <strong>download</strong>.</p>\n</li>\n<li>\n<p><strong>Navigate</strong> to lib folder on your device<br>\nfor Windows <code>C:\\Program Files (x86)\\Arduino\\lib</code><br>\nfor Mac <code>/Applications/Arduino.app/Contents/Java/lib</code><br>\nfor Linux <code>/usr/share/arduino/lib/</code></p>\n</li>\n<li>\n<p><strong>Replace</strong> the theme folder from the downloaded one. In case you need to revert make a <strong>Copy</strong> of original files.</p>\n</li>\n<li>\n<p><strong>Restart</strong> the Arduino IDE.</p>\n</li>\n</ol>\n<blockquote>\n<p>Ta Da</p>\n</blockquote>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-gallery-card kg-width-wide kg-card-hascaption\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/02/dark.jpg\" width=\"1920\" height=\"1042\" alt srcset=\"/content/images/size/w600/2021/02/dark.jpg 600w, /content/images/size/w1000/2021/02/dark.jpg 1000w, /content/images/size/w1600/2021/02/dark.jpg 1600w, /content/images/2021/02/dark.jpg 1920w\" sizes=\"(min-width: 720px) 720px\"></div><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/02/light.jpg\" width=\"1913\" height=\"1036\" alt srcset=\"/content/images/size/w600/2021/02/light.jpg 600w, /content/images/size/w1000/2021/02/light.jpg 1000w, /content/images/size/w1600/2021/02/light.jpg 1600w, /content/images/2021/02/light.jpg 1913w\" sizes=\"(min-width: 720px) 720px\"></div></div></div><figcaption>Dark vs Light</figcaption></figure>","comment_id":"5ef838e045639b0052fca04c","plaintext":"> Bored with regular IDE. Try this\n\n\nDark themed apps, webisites are popular these day because it eye catching. You\ncan easily do this for Arduino IDE (ver 1.8.5 or higher)\n\n 1. First go this [https://github.com/jeffThompson/DarkArduinoTheme] git repo\n    and download.\n    \n    \n 2. Navigate to lib folder on your device\n    for Windows C:\\Program Files (x86)\\Arduino\\lib\n    for Mac /Applications/Arduino.app/Contents/Java/lib\n    for Linux /usr/share/arduino/lib/\n    \n    \n 3. Replace the theme folder from the downloaded one. In case you need to revert\n    make a Copy of original files.\n    \n    \n 4. Restart the Arduino IDE.\n    \n    \n\n> Ta Da\n\n\nDark vs Light","feature_image":"https://images.unsplash.com/photo-1541913299-273fd84d10c4?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-06-28 06:29:52","created_by":"1","updated_at":"2021-02-22 17:57:43","updated_by":"1","published_at":"2020-06-28 06:41:24","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd7c9d9e73c930ae908ba4a","uuid":"9d77ada7-095e-4e96-b0a6-6593a78cde61","title":"Structures-I","slug":"structures","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"Every programming language has its own structure. Structure of the program will improve the clarity and quality. It also improves development time as well.\\nThere are some main structures common in every language (way of using them could be different in some cases.)\\n\\n* control structures\\n    1.selection\\n    2.repetition\\n* subroutines\\n* blocks\\n\\nSome basic operations are here that are very useful in programming.\\n\\n### Arithmetics\\n\\n\\n| Name           \\t| Operator \\t| Description                                 \\t|\\n|----------------\\t|----------\\t|---------------------------------------------\\t|\\n| Addition       \\t| +        \\t| Add two operands                            \\t|\\n| Subtract       \\t| -        \\t| Subtract second from the first one          \\t|\\n| Multiplication \\t| *        \\t| Multiply operand                            \\t|\\n| Division       \\t| /        \\t| Divide numerator by denominator             \\t|\\n| Modulo         \\t| %        \\t| Remainder after integer division             \\t|\\n| Assign         \\t| =        \\t| Store the value of RHS to the LHS variable  \\t|\\n\\n\\n### Comparison \\n\\n| Name                 \\t| Operator \\t| Description                                                      \\t|\\n|----------------------\\t|----------\\t|------------------------------------------------------------------\\t|\\n| equal to             \\t| ==       \\t| check if two values are equal or not, If equal return true       \\t|\\n| not equal to         \\t| !=       \\t| check if two values are equal or not, If not equal return true   \\t|\\n| less than            \\t| <        \\t| check if LHS is less than the RHS, if yes return true            \\t|\\n| greater than          \\t| >        \\t| check if LHS is greter than the RHS, if yes return true          \\t|\\n| less than or equal   \\t| <=       \\t| check if LHS is less than or equal the RHS, if yes return true   \\t|\\n| greater than or equal \\t| >=       \\t| check if LHS is greater than or equal the RHS, if yes return true \\t|\\n\\n### Boolean Operations\\n\\n| Name \\t| Operator \\t| Description                                      \\t|\\n|------\\t|----------\\t|--------------------------------------------------\\t|\\n| and  \\t| &&       \\t| check if both operands are not zero, return true \\t|\\n| or   \\t| \\\\|\\\\|     \\t| check if any operand is not zero, return true    \\t|\\n| not  \\t| !        \\t| return the negation of an operand                 \\t|\\n\\n### Bitwise Operations\\n| Name             \\t| Operator \\t| Description                                                                      \\t|\\n|------------------\\t|----------\\t|----------------------------------------------------------------------------------\\t|\\n| bitwise and      \\t| &        \\t| AND operation on bitwise arithmetics                                             \\t|\\n| bit shift left   \\t| <<       \\t| the bits in the left operand will be shifted left by number of steps in the right operand.  \\t|\\n| bit shift right  \\t| >>       \\t| the bits in the left operand will beshifted right by number of steps in the right operand. \\t|\\n| bitwise xor      \\t| ^        \\t| XOR operation on bitwise arithmetics                                             \\t|\\n| bitwise or       \\t| \\\\|       \\t| OR operation on bitwise arithmetics                                              \\t|\\n| bitwise not      \\t| ~        \\t| NOT operation on bitwise arithmetics                                             \\t|\"}],[\"markdown\",{\"markdown\":\"##Control Structures\\nControl structures are the blocks that determine the direction of the program flows.\\n\\n### Selection\\n1. if .. else\\n```\\n    if (condition){\\n       task 1 }\\n   else {\\n       task 2 }\\n   ```\\nIn this method you can determine what task should be done depending on that \\\"condition\\\" is True or False. If the condition is True program  will run task 1, else it will run task 2. Also, we can check many conditions by using \\\"else if\\\".\\n\\n    ```\\n     if (condition 1){\\n         task 1 }\\n     else if (condition 2) {\\n         task 2 }\\n     else if (condition 3) {\\n         task 3 } \\n     .\\n     .\\n     .\\n     else{\\n         task n} \\n     ```\\n2. while\\n   ```\\n   while(condition){\\n    task   }  \\n   ```\\n        \\n   In this method task will run as long as the condition is true, otherwise, the task will not run.   \\n3. do .. while\\n    ```\\n    do{\\n    task } while ( condition );\\n    ```\\n    this is also similar to \\\"while\\\", but in this method, the task will run already once before program check the condition is True or False.\\n\\n### Repetition\\n\\n1. for loop\\n```\\nfor (start,end condition ,step){\\n        task  }\\n```\\nUsing for loops we can repeat the same task, again and again, a finite number of times without repeating the code.\\n\\n2. while loop\\n```\\nwhile(True){\\n        task }\\n```\\nusing while we discussed above we can repeat a task infinitely by make the statement \\\"True\\\". We can use \\\"while\\\" for finite loops like this.\\n```\\n    int step=start ;\\n    while(step<end condition){\\n        task\\n        step+=step; }\\n```\\nnote: in above methods we can choose start value, end value and also how many steps should be the next iteration.  \\neg:-\\n```\\n    for(int i=0, i<=10; i+=1){\\n        Serial.print(i);\\n        Serial.print(',');} \\n```\\nresult>> ```0,1,2,3,4,5,6,7,8,9,10```\\n```\\n    for(int i=0, i<=10; i+=2){\\n        Serial.print(i);\\n        Serial.print(',');} \\n```\\nresult>> ```0,2,4,6,8,10```\\n\\nI will discuss about subroutines and blocks in another article so will easy to read.\\n> Stay tuned\"}],[\"markdown\",{\"markdown\":\"> “Structure significantly influences behavior, thereby dramatically impacting results.” ~ Chris Hutchinson\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>Every programming language has its own structure. Structure of the program will improve the clarity and quality. It also improves development time as well.<br>\nThere are some main structures common in every language (way of using them could be different in some cases.)</p>\n<ul>\n<li>control structures<br>\n1.selection<br>\n2.repetition</li>\n<li>subroutines</li>\n<li>blocks</li>\n</ul>\n<p>Some basic operations are here that are very useful in programming.</p>\n<h3 id=\"arithmetics\">Arithmetics</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Addition</td>\n<td>+</td>\n<td>Add two operands</td>\n</tr>\n<tr>\n<td>Subtract</td>\n<td>-</td>\n<td>Subtract second from the first one</td>\n</tr>\n<tr>\n<td>Multiplication</td>\n<td>*</td>\n<td>Multiply operand</td>\n</tr>\n<tr>\n<td>Division</td>\n<td>/</td>\n<td>Divide numerator by denominator</td>\n</tr>\n<tr>\n<td>Modulo</td>\n<td>%</td>\n<td>Remainder after integer division</td>\n</tr>\n<tr>\n<td>Assign</td>\n<td>=</td>\n<td>Store the value of RHS to the LHS variable</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"comparison\">Comparison</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>equal to</td>\n<td>==</td>\n<td>check if two values are equal or not, If equal return true</td>\n</tr>\n<tr>\n<td>not equal to</td>\n<td>!=</td>\n<td>check if two values are equal or not, If not equal return true</td>\n</tr>\n<tr>\n<td>less than</td>\n<td>&lt;</td>\n<td>check if LHS is less than the RHS, if yes return true</td>\n</tr>\n<tr>\n<td>greater than</td>\n<td>&gt;</td>\n<td>check if LHS is greter than the RHS, if yes return true</td>\n</tr>\n<tr>\n<td>less than or equal</td>\n<td>&lt;=</td>\n<td>check if LHS is less than or equal the RHS, if yes return true</td>\n</tr>\n<tr>\n<td>greater than or equal</td>\n<td>&gt;=</td>\n<td>check if LHS is greater than or equal the RHS, if yes return true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"booleanoperations\">Boolean Operations</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>and</td>\n<td>&amp;&amp;</td>\n<td>check if both operands are not zero, return true</td>\n</tr>\n<tr>\n<td>or</td>\n<td>||</td>\n<td>check if any operand is not zero, return true</td>\n</tr>\n<tr>\n<td>not</td>\n<td>!</td>\n<td>return the negation of an operand</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"bitwiseoperations\">Bitwise Operations</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bitwise and</td>\n<td>&amp;</td>\n<td>AND operation on bitwise arithmetics</td>\n</tr>\n<tr>\n<td>bit shift left</td>\n<td>&lt;&lt;</td>\n<td>the bits in the left operand will be shifted left by number of steps in the right operand.</td>\n</tr>\n<tr>\n<td>bit shift right</td>\n<td>&gt;&gt;</td>\n<td>the bits in the left operand will beshifted right by number of steps in the right operand.</td>\n</tr>\n<tr>\n<td>bitwise xor</td>\n<td>^</td>\n<td>XOR operation on bitwise arithmetics</td>\n</tr>\n<tr>\n<td>bitwise or</td>\n<td>|</td>\n<td>OR operation on bitwise arithmetics</td>\n</tr>\n<tr>\n<td>bitwise not</td>\n<td>~</td>\n<td>NOT operation on bitwise arithmetics</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h2 id=\"controlstructures\">Control Structures</h2>\n<p>Control structures are the blocks that determine the direction of the program flows.</p>\n<h3 id=\"selection\">Selection</h3>\n<ol>\n<li>if .. else</li>\n</ol>\n<pre><code>    if (condition){\n       task 1 }\n   else {\n       task 2 }\n</code></pre>\n<p>In this method you can determine what task should be done depending on that &quot;condition&quot; is True or False. If the condition is True program  will run task 1, else it will run task 2. Also, we can check many conditions by using &quot;else if&quot;.</p>\n<pre><code>```\n if (condition 1){\n     task 1 }\n else if (condition 2) {\n     task 2 }\n else if (condition 3) {\n     task 3 } \n .\n .\n .\n else{\n     task n} \n ```\n</code></pre>\n<ol start=\"2\">\n<li>\n<p>while</p>\n<pre><code>while(condition){\n task   }  \n</code></pre>\n<p>In this method task will run as long as the condition is true, otherwise, the task will not run.</p>\n</li>\n<li>\n<p>do .. while</p>\n<pre><code>do{\ntask } while ( condition );\n</code></pre>\n<p>this is also similar to &quot;while&quot;, but in this method, the task will run already once before program check the condition is True or False.</p>\n</li>\n</ol>\n<h3 id=\"repetition\">Repetition</h3>\n<ol>\n<li>for loop</li>\n</ol>\n<pre><code>for (start,end condition ,step){\n        task  }\n</code></pre>\n<p>Using for loops we can repeat the same task, again and again, a finite number of times without repeating the code.</p>\n<ol start=\"2\">\n<li>while loop</li>\n</ol>\n<pre><code>while(True){\n        task }\n</code></pre>\n<p>using while we discussed above we can repeat a task infinitely by make the statement &quot;True&quot;. We can use &quot;while&quot; for finite loops like this.</p>\n<pre><code>    int step=start ;\n    while(step&lt;end condition){\n        task\n        step+=step; }\n</code></pre>\n<p>note: in above methods we can choose start value, end value and also how many steps should be the next iteration.<br>\neg:-</p>\n<pre><code>    for(int i=0, i&lt;=10; i+=1){\n        Serial.print(i);\n        Serial.print(',');} \n</code></pre>\n<p>result&gt;&gt; <code>0,1,2,3,4,5,6,7,8,9,10</code></p>\n<pre><code>    for(int i=0, i&lt;=10; i+=2){\n        Serial.print(i);\n        Serial.print(',');} \n</code></pre>\n<p>result&gt;&gt; <code>0,2,4,6,8,10</code></p>\n<p>I will discuss about subroutines and blocks in another article so will easy to read.</p>\n<blockquote>\n<p>Stay tuned</p>\n</blockquote>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>“Structure significantly influences behavior, thereby dramatically impacting results.” ~ Chris Hutchinson</p>\n</blockquote>\n<!--kg-card-end: markdown-->","comment_id":"5ef87a4edf4e7d0052170538","plaintext":"Every programming language has its own structure. Structure of the program will\nimprove the clarity and quality. It also improves development time as well.\nThere are some main structures common in every language (way of using them could\nbe different in some cases.)\n\n * control structures\n   1.selection\n   2.repetition\n * subroutines\n * blocks\n\nSome basic operations are here that are very useful in programming.\n\nArithmetics\nNameOperatorDescriptionAddition+Add two operandsSubtract-Subtract second from\nthe first oneMultiplication*Multiply operandDivision/Divide numerator by\ndenominatorModulo%Remainder after integer divisionAssign=Store the value of RHS\nto the LHS variableComparison\nNameOperatorDescriptionequal to==check if two values are equal or not, If equal\nreturn truenot equal to!=check if two values are equal or not, If not equal\nreturn trueless than<check if LHS is less than the RHS, if yes return true\ngreater than>check if LHS is greter than the RHS, if yes return trueless than or\nequal<=check if LHS is less than or equal the RHS, if yes return truegreater\nthan or equal>=check if LHS is greater than or equal the RHS, if yes return true\nBoolean Operations\nNameOperatorDescriptionand&&check if both operands are not zero, return trueor||\ncheck if any operand is not zero, return truenot!return the negation of an\noperandBitwise Operations\nNameOperatorDescriptionbitwise and&AND operation on bitwise arithmeticsbit shift\nleft<<the bits in the left operand will be shifted left by number of steps in\nthe right operand.bit shift right>>the bits in the left operand will beshifted\nright by number of steps in the right operand.bitwise xor^XOR operation on\nbitwise arithmeticsbitwise or|OR operation on bitwise arithmeticsbitwise not~NOT\noperation on bitwise arithmeticsControl Structures\nControl structures are the blocks that determine the direction of the program\nflows.\n\nSelection\n 1. if .. else\n\n    if (condition){\n       task 1 }\n   else {\n       task 2 }\n\n\nIn this method you can determine what task should be done depending on that\n\"condition\" is True or False. If the condition is True program will run task 1,\nelse it will run task 2. Also, we can check many conditions by using \"else if\".\n\n```\n if (condition 1){\n     task 1 }\n else if (condition 2) {\n     task 2 }\n else if (condition 3) {\n     task 3 } \n .\n .\n .\n else{\n     task n} \n ```\n\n\n 2. while\n    \n    while(condition){\n     task   }  \n    \n    \n    In this method task will run as long as the condition is true, otherwise,\n    the task will not run.\n    \n    \n 3. do .. while\n    \n    do{\n    task } while ( condition );\n    \n    \n    this is also similar to \"while\", but in this method, the task will run\n    already once before program check the condition is True or False.\n    \n    \n\nRepetition\n 1. for loop\n\nfor (start,end condition ,step){\n        task  }\n\n\nUsing for loops we can repeat the same task, again and again, a finite number of\ntimes without repeating the code.\n\n 2. while loop\n\nwhile(True){\n        task }\n\n\nusing while we discussed above we can repeat a task infinitely by make the\nstatement \"True\". We can use \"while\" for finite loops like this.\n\n    int step=start ;\n    while(step<end condition){\n        task\n        step+=step; }\n\n\nnote: in above methods we can choose start value, end value and also how many\nsteps should be the next iteration.\neg:-\n\n    for(int i=0, i<=10; i+=1){\n        Serial.print(i);\n        Serial.print(',');} \n\n\nresult>> 0,1,2,3,4,5,6,7,8,9,10\n\n    for(int i=0, i<=10; i+=2){\n        Serial.print(i);\n        Serial.print(',');} \n\n\nresult>> 0,2,4,6,8,10\n\nI will discuss about subroutines and blocks in another article so will easy to\nread.\n\n> Stay tuned\n\n\n> “Structure significantly influences behavior, thereby dramatically impacting\nresults.” ~ Chris Hutchinson","feature_image":"https://images.unsplash.com/photo-1532622785990-d2c36a76f5a6?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-06-28 11:09:02","created_by":"1","updated_at":"2020-12-15 16:53:06","updated_by":"1","published_at":"2020-06-28 11:09:09","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd8cee711120f006f320fa1","uuid":"234a28df-35be-4095-83ce-ed2a8e41a637","title":"Structures-II","slug":"structures-ii","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"In [Structure-I](https://falconblog.xyz/structures/) includes about **control structures** and **basic operations** in Arduino Language.\\n\\n* control structures\\n    1.selection\\n    2.repetition\\n* subroutines\\n* blocks\\n\\n###Subroutings\\n\\n\\n###Blocks\\n\\n\\n\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>In <a href=\"https://falconblog.xyz/structures/\">Structure-I</a> includes about <strong>control structures</strong> and <strong>basic operations</strong> in Arduino Language.</p>\n<ul>\n<li>control structures<br>\n1.selection<br>\n2.repetition</li>\n<li>subroutines</li>\n<li>blocks</li>\n</ul>\n<h3 id=\"subroutings\">Subroutings</h3>\n<h3 id=\"blocks\">Blocks</h3>\n<!--kg-card-end: markdown--><p></p>","comment_id":"5fd8cee711120f006f320fa1","plaintext":"In Structure-I [https://falconblog.xyz/structures/] includes about control\nstructures and basic operations in Arduino Language.\n\n * control structures\n   1.selection\n   2.repetition\n * subroutines\n * blocks\n\nSubroutings\nBlocks","feature_image":"https://images.unsplash.com/photo-1607971422532-73f9d45d7a47?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8YWxsfDU3fHx8fHx8Mnw&ixlib=rb-1.2.1&q=80&w=2000","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-12-15 14:57:43","created_by":"1","updated_at":"2021-10-22 19:21:12","updated_by":"1","published_at":"2020-12-15 15:04:30","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd916d91363b2018c5c9512","uuid":"140f90fb-024b-4bc9-ae1e-7eaaf089c475","title":"NodeMCU","slug":"nodemcu","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> “If you think that the internet has changed your life, think again. The IoT is about to change it all over again!” — Brendan O’Brien, Chief Architect & Co-Founder, Aria Systems\\n\\n\\n**NodeMCU** is a **low-cost** open-source IoT system. but in general, NodeMCU stands for hardware based on **ESP8266 Wi-Fi SoC**. Basically, this is a development board like Arduino. There are some significant differences between common AVR based Arduino board and NodeMCU.I will discuss those in another article. Not like Arduino, we can use many languages for NodeMCU like **Lua scripting language, Micro-python**. But to make things easy I will discuss with well-known **Arduino language**.\\n\\nLet get started with NodeMCU.I think You may configure **Arduino IDE** now. If not follow [this](https://falconblog.xyz/arduino_s1/index.html).\\n\\n1. Go to Arduino IDE. *Files > Preferences*.\\n ![file1](/content/images/2020/12/file1.jpg)\\n2. Paste this URL in the Additional Board Manager URLs tab > OK\\n    ```http://arduino.esp8266.com/stable/package_esp8266com_index.json```\\n    \\n    \\n    ![preferences](/content/images/2020/12/preferences.jpg)\\n3. Go to *Tools > Boards > Board Manager*.\\n    ![tools1](/content/images/2020/12/tools1.jpg)\\n4. Search for ```esp8266```. Click install.\\n    ![bman1](/content/images/2020/12/bman1.jpg)\\n\\nNow you have **All set and Ready to Go!!!**. Try something from Examples.\\n\\n5. select your board ( Mine is NodeMCU 1.0)\\nYou may see new options here. If you are not familiar with those keep default settings. \\n\\n![tools2](/content/images/2020/12/tools2.jpg)\\n\\n6. Select your COM port and **Upload!!!**\\n\\n* NodeMCU is very useful when it comes to IoT because of having built-in Wi-Fi.\\n> Stay Tuned for the new IoT tutorial series.\\n\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><blockquote>\n<p>“If you think that the internet has changed your life, think again. The IoT is about to change it all over again!” — Brendan O’Brien, Chief Architect &amp; Co-Founder, Aria Systems</p>\n</blockquote>\n<p><strong>NodeMCU</strong> is a <strong>low-cost</strong> open-source IoT system. but in general, NodeMCU stands for hardware based on <strong>ESP8266 Wi-Fi SoC</strong>. Basically, this is a development board like Arduino. There are some significant differences between common AVR based Arduino board and NodeMCU.I will discuss those in another article. Not like Arduino, we can use many languages for NodeMCU like <strong>Lua scripting language, Micro-python</strong>. But to make things easy I will discuss with well-known <strong>Arduino language</strong>.</p>\n<p>Let get started with NodeMCU.I think You may configure <strong>Arduino IDE</strong> now. If not follow <a href=\"https://falconblog.xyz/arduino_s1/index.html\">this</a>.</p>\n<ol>\n<li>\n<p>Go to Arduino IDE. <em>Files &gt; Preferences</em>.<br>\n<img src=\"/content/images/2020/12/file1.jpg\" alt=\"file1\"></p>\n</li>\n<li>\n<p>Paste this URL in the Additional Board Manager URLs tab &gt; OK<br>\n<code>http://arduino.esp8266.com/stable/package_esp8266com_index.json</code></p>\n<p><img src=\"/content/images/2020/12/preferences.jpg\" alt=\"preferences\"></p>\n</li>\n<li>\n<p>Go to <em>Tools &gt; Boards &gt; Board Manager</em>.<br>\n<img src=\"/content/images/2020/12/tools1.jpg\" alt=\"tools1\"></p>\n</li>\n<li>\n<p>Search for <code>esp8266</code>. Click install.<br>\n<img src=\"/content/images/2020/12/bman1.jpg\" alt=\"bman1\"></p>\n</li>\n</ol>\n<p>Now you have <strong>All set and Ready to Go!!!</strong>. Try something from Examples.</p>\n<ol start=\"5\">\n<li>select your board ( Mine is NodeMCU 1.0)<br>\nYou may see new options here. If you are not familiar with those keep default settings.</li>\n</ol>\n<p><img src=\"/content/images/2020/12/tools2.jpg\" alt=\"tools2\"></p>\n<ol start=\"6\">\n<li>Select your COM port and <strong>Upload!!!</strong></li>\n</ol>\n<ul>\n<li>NodeMCU is very useful when it comes to IoT because of having built-in Wi-Fi.</li>\n</ul>\n<blockquote>\n<p>Stay Tuned for the new IoT tutorial series.</p>\n</blockquote>\n<!--kg-card-end: markdown-->","comment_id":"5fd916d91363b2018c5c9512","plaintext":"> “If you think that the internet has changed your life, think again. The IoT is\nabout to change it all over again!” — Brendan O’Brien, Chief Architect &\nCo-Founder, Aria Systems\n\n\nNodeMCU is a low-cost open-source IoT system. but in general, NodeMCU stands for\nhardware based on ESP8266 Wi-Fi SoC. Basically, this is a development board like\nArduino. There are some significant differences between common AVR based Arduino\nboard and NodeMCU.I will discuss those in another article. Not like Arduino, we\ncan use many languages for NodeMCU like Lua scripting language, Micro-python.\nBut to make things easy I will discuss with well-known Arduino language.\n\nLet get started with NodeMCU.I think You may configure Arduino IDE now. If not\nfollow this [https://falconblog.xyz/arduino_s1/index.html].\n\n 1. Go to Arduino IDE. Files > Preferences.\n    \n    \n    \n 2. Paste this URL in the Additional Board Manager URLs tab > OK\n    http://arduino.esp8266.com/stable/package_esp8266com_index.json\n    \n    \n    \n    \n 3. Go to Tools > Boards > Board Manager.\n    \n    \n    \n 4. Search for esp8266. Click install.\n    \n    \n    \n\nNow you have All set and Ready to Go!!!. Try something from Examples.\n\n 5. select your board ( Mine is NodeMCU 1.0)\n    You may see new options here. If you are not familiar with those keep\n    default settings.\n\n\n\n 6. Select your COM port and Upload!!!\n\n * NodeMCU is very useful when it comes to IoT because of having built-in Wi-Fi.\n\n> Stay Tuned for the new IoT tutorial series.","feature_image":"https://images.unsplash.com/photo-1524234107056-1c1f48f64ab8?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDF8fEVTUDgyNjZ8ZW58MHx8fA&ixlib=rb-1.2.1&q=80&w=2000","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-12-15 20:04:41","created_by":"1","updated_at":"2020-12-24 21:33:49","updated_by":"1","published_at":"2020-12-15 20:54:21","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd916fb1363b2018c5c9517","uuid":"6384ca4a-30fc-47d7-86fa-a3abcf00de94","title":"STM32","slug":"stm32","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"I was looking for a faster microcontroller and with help of many I choose STM32 as the solution.So now you know **STM32** is faster than **AVR based Arduino MCUs**.\\n\\nAs I told you I choosed **STM32f103** MCU base develpment board called **STM bluepill**. They are widely available in any region with  very low price. It may be cloned, but works same in many cases.In this article I will explaine how to configure perfect environment for work with **STM32 bluepill**. There are many environments to configure such as CubeIDE, VSCODE + PlatformIO extention, Atom + PlatformIO extention. But here we are using the Arduino IDE. \\n\\nThis MCU are **32bit based** and have **large RAM/ROM** compared to AVR based Arduino. I will discuss about MCUs in another article soon.\\n\\n![stmf103-1](/content/images/2020/12/stmf103-1.jpg)\\n\\n**So let's make it work.**\\n\\nYou may required these.\\n*     STM32 Development Board \\n*     FTDI Programmer or STLink\\n*     a Breadboard*\\n*     Some Jumper wires\\n*     a Laptop \\n\\n\\n### With FTDI programmer\\n\\nconnect FTDI to STM using jumpers.\\n| FTDI | STM |\\n|------|-----|\\n| VCC  | 5V  |\\n| GND  | GND |\\n| RX   | A9  |\\n| TX   | A10 |\\n\\n\\n![Circuit-Diagram-for-Blinking-LED-using-STM32-2](/content/images/2020/12/Circuit-Diagram-for-Blinking-LED-using-STM32-2.jpg)\\n\\n\\n1. Go to Arduino IDE. *Files > Preferences*.\\n2. Paste this URL in the Additional Board Manager URLs tab > OK\\n    ```http://dan.drown.org/stm32duino/package_STM32duino_index.json```\\n    \\n    ![prefe2](/content/images/2020/12/prefe2.jpg)\\n    \\n    *(if there are some links already use the button to exoand the window then paste the link.)*\\n    \\n3. Go to *Tools > Boards > Board Manager*.\\n\\n![tools1-1](/content/images/2020/12/tools1-1.jpg)\\n\\n4. Search for ```stm```. Click install.\\n\\n![bman2](/content/images/2020/12/bman2.jpg)\\n\\n5. Set settings as following for FTDI. \\n\\n![tool3](/content/images/2020/12/tool3.jpg)\\n\\n6. Select the COM port. \\n\\n* read the last steps before upload \\n\\n### With STLink\\n\\nonly few steps have to change from above. Im currently using a Windows Laptop.so some of these steps may chang for Mac OS Laptops.\\n\\n* Download necessary [drivers](https://www.st.com/en/development-tools/stsw-link009.html) for STLink first. Install it. When you plug the STLINK to your computer after that it may look like this. ( for older STLinks use  STSW-LINK007 )\\n\\n\\n\"}],[\"gallery\",{\"images\":[{\"fileName\":\"taskbr.jpg.jpg\",\"row\":0,\"src\":\"/content/images/2020/12/taskbr.jpg.jpg\",\"width\":339,\"height\":37},{\"fileName\":\"taskbr.jpg.jpg.jpg\",\"row\":0,\"src\":\"/content/images/2020/12/taskbr.jpg.jpg.jpg\",\"width\":309,\"height\":86}]}],[\"markdown\",{\"markdown\":\"1. Go to Arduino IDE. *Files > Preferences*.\\n2. Paste this URL in the Additional Board Manager URLs tab > OK\\n    ```http://dan.drown.org/stm32duino/package_STM32duino_index.json```\\n    \\n    ![prefe2](/content/images/2020/12/prefe2.jpg)\\n    \\n    *(if there are some links already use the button to exoand the window then paste the link.)*\\n    \\n3. Go to *Tools > Boards > Board Manager*.\\n\\n![tools1-1](/content/images/2020/12/tools1-1.jpg)\\n\\n4. Search for ```stm```. Click install.\\n\\n![bman2](/content/images/2020/12/bman2.jpg)\\n\\n5. Set settings as following for STLink. \\n\\n![tool4](/content/images/2020/12/tool4.jpg)\\n\\n6. Select the COM port. \\n\\n\\n### last steps.\\n\\nHave you notices that, there are 2 male headers marked as BOOT0, BOOT1. Read this part carefully. Using these 2 BOOT pins we can configure BOOT memories.\\n\\n\\n| BOOT1 |  BOOT0 | BOOT MODE         |\\n|-------|-------|-------------------|\\n| x     | 0     | Main Flash memory |\\n| 0     | 1     | System memory     |\\n| 1     | 1     | Embedded SRAM     |\\n\\n\\nTo upload code to flash memory ,\\n*   Set **BOOT0 --> 1 | BOOT1 --> 0**.\\n\\nAfter upload the code, \\n*   set **BOOT0 --> 0** .\\n      By this we only reprogram flash memory.\\n\\n\\n\\n\\n### Why don't we upload codes via USB code directly ?\\n\\n simple answer. Upload through USB require a Bootloader, which not include when we purchase this MCU. Wecan flash the Bootloader by one of above methods. Then we can use USB port for upload the code. I will upload descriptive article for that task. \\n\\n> stay tuned\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>I was looking for a faster microcontroller and with help of many I choose STM32 as the solution.So now you know <strong>STM32</strong> is faster than <strong>AVR based Arduino MCUs</strong>.</p>\n<p>As I told you I choosed <strong>STM32f103</strong> MCU base develpment board called <strong>STM bluepill</strong>. They are widely available in any region with  very low price. It may be cloned, but works same in many cases.In this article I will explaine how to configure perfect environment for work with <strong>STM32 bluepill</strong>. There are many environments to configure such as CubeIDE, VSCODE + PlatformIO extention, Atom + PlatformIO extention. But here we are using the Arduino IDE.</p>\n<p>This MCU are <strong>32bit based</strong> and have <strong>large RAM/ROM</strong> compared to AVR based Arduino. I will discuss about MCUs in another article soon.</p>\n<p><img src=\"/content/images/2020/12/stmf103-1.jpg\" alt=\"stmf103-1\"></p>\n<p><strong>So let's make it work.</strong></p>\n<p>You may required these.</p>\n<ul>\n<li>\n<pre><code>STM32 Development Board \n</code></pre>\n</li>\n<li>\n<pre><code>FTDI Programmer or STLink\n</code></pre>\n</li>\n<li>\n<pre><code>a Breadboard*\n</code></pre>\n</li>\n<li>\n<pre><code>Some Jumper wires\n</code></pre>\n</li>\n<li>\n<pre><code>a Laptop \n</code></pre>\n</li>\n</ul>\n<h3 id=\"withftdiprogrammer\">With FTDI programmer</h3>\n<p>connect FTDI to STM using jumpers.</p>\n<table>\n<thead>\n<tr>\n<th>FTDI</th>\n<th>STM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>VCC</td>\n<td>5V</td>\n</tr>\n<tr>\n<td>GND</td>\n<td>GND</td>\n</tr>\n<tr>\n<td>RX</td>\n<td>A9</td>\n</tr>\n<tr>\n<td>TX</td>\n<td>A10</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"/content/images/2020/12/Circuit-Diagram-for-Blinking-LED-using-STM32-2.jpg\" alt=\"Circuit-Diagram-for-Blinking-LED-using-STM32-2\"></p>\n<ol>\n<li>\n<p>Go to Arduino IDE. <em>Files &gt; Preferences</em>.</p>\n</li>\n<li>\n<p>Paste this URL in the Additional Board Manager URLs tab &gt; OK<br>\n<code>http://dan.drown.org/stm32duino/package_STM32duino_index.json</code></p>\n<p><img src=\"/content/images/2020/12/prefe2.jpg\" alt=\"prefe2\"></p>\n<p><em>(if there are some links already use the button to exoand the window then paste the link.)</em></p>\n</li>\n<li>\n<p>Go to <em>Tools &gt; Boards &gt; Board Manager</em>.</p>\n</li>\n</ol>\n<p><img src=\"/content/images/2020/12/tools1-1.jpg\" alt=\"tools1-1\"></p>\n<ol start=\"4\">\n<li>Search for <code>stm</code>. Click install.</li>\n</ol>\n<p><img src=\"/content/images/2020/12/bman2.jpg\" alt=\"bman2\"></p>\n<ol start=\"5\">\n<li>Set settings as following for FTDI.</li>\n</ol>\n<p><img src=\"/content/images/2020/12/tool3.jpg\" alt=\"tool3\"></p>\n<ol start=\"6\">\n<li>Select the COM port.</li>\n</ol>\n<ul>\n<li>read the last steps before upload</li>\n</ul>\n<h3 id=\"withstlink\">With STLink</h3>\n<p>only few steps have to change from above. Im currently using a Windows Laptop.so some of these steps may chang for Mac OS Laptops.</p>\n<ul>\n<li>Download necessary <a href=\"https://www.st.com/en/development-tools/stsw-link009.html\">drivers</a> for STLink first. Install it. When you plug the STLINK to your computer after that it may look like this. ( for older STLinks use  STSW-LINK007 )</li>\n</ul>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"/content/images/2020/12/taskbr.jpg.jpg\" width=\"339\" height=\"37\" alt></div><div class=\"kg-gallery-image\"><img src=\"/content/images/2020/12/taskbr.jpg.jpg.jpg\" width=\"309\" height=\"86\" alt></div></div></div></figure><!--kg-card-begin: markdown--><ol>\n<li>\n<p>Go to Arduino IDE. <em>Files &gt; Preferences</em>.</p>\n</li>\n<li>\n<p>Paste this URL in the Additional Board Manager URLs tab &gt; OK<br>\n<code>http://dan.drown.org/stm32duino/package_STM32duino_index.json</code></p>\n<p><img src=\"/content/images/2020/12/prefe2.jpg\" alt=\"prefe2\"></p>\n<p><em>(if there are some links already use the button to exoand the window then paste the link.)</em></p>\n</li>\n<li>\n<p>Go to <em>Tools &gt; Boards &gt; Board Manager</em>.</p>\n</li>\n</ol>\n<p><img src=\"/content/images/2020/12/tools1-1.jpg\" alt=\"tools1-1\"></p>\n<ol start=\"4\">\n<li>Search for <code>stm</code>. Click install.</li>\n</ol>\n<p><img src=\"/content/images/2020/12/bman2.jpg\" alt=\"bman2\"></p>\n<ol start=\"5\">\n<li>Set settings as following for STLink.</li>\n</ol>\n<p><img src=\"/content/images/2020/12/tool4.jpg\" alt=\"tool4\"></p>\n<ol start=\"6\">\n<li>Select the COM port.</li>\n</ol>\n<h3 id=\"laststeps\">last steps.</h3>\n<p>Have you notices that, there are 2 male headers marked as BOOT0, BOOT1. Read this part carefully. Using these 2 BOOT pins we can configure BOOT memories.</p>\n<table>\n<thead>\n<tr>\n<th>BOOT1</th>\n<th>BOOT0</th>\n<th>BOOT MODE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x</td>\n<td>0</td>\n<td>Main Flash memory</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>System memory</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>Embedded SRAM</td>\n</tr>\n</tbody>\n</table>\n<p>To upload code to flash memory ,</p>\n<ul>\n<li>Set <strong>BOOT0 --&gt; 1 | BOOT1 --&gt; 0</strong>.</li>\n</ul>\n<p>After upload the code,</p>\n<ul>\n<li>set <strong>BOOT0 --&gt; 0</strong> .<br>\nBy this we only reprogram flash memory.</li>\n</ul>\n<h3 id=\"whydontweuploadcodesviausbcodedirectly\">Why don't we upload codes via USB code directly ?</h3>\n<p>simple answer. Upload through USB require a Bootloader, which not include when we purchase this MCU. Wecan flash the Bootloader by one of above methods. Then we can use USB port for upload the code. I will upload descriptive article for that task.</p>\n<blockquote>\n<p>stay tuned</p>\n</blockquote>\n<!--kg-card-end: markdown-->","comment_id":"5fd916fb1363b2018c5c9517","plaintext":"I was looking for a faster microcontroller and with help of many I choose STM32\nas the solution.So now you know STM32 is faster than AVR based Arduino MCUs.\n\nAs I told you I choosed STM32f103 MCU base develpment board called STM bluepill.\nThey are widely available in any region with very low price. It may be cloned,\nbut works same in many cases.In this article I will explaine how to configure\nperfect environment for work with STM32 bluepill. There are many environments to\nconfigure such as CubeIDE, VSCODE + PlatformIO extention, Atom + PlatformIO\nextention. But here we are using the Arduino IDE.\n\nThis MCU are 32bit based and have large RAM/ROM compared to AVR based Arduino. I\nwill discuss about MCUs in another article soon.\n\n\n\nSo let's make it work.\n\nYou may required these.\n\n * STM32 Development Board \n   \n   \n   \n * FTDI Programmer or STLink\n   \n   \n   \n * a Breadboard*\n   \n   \n   \n * Some Jumper wires\n   \n   \n   \n * a Laptop \n   \n   \n   \n\nWith FTDI programmer\nconnect FTDI to STM using jumpers.\n\nFTDISTMVCC5VGNDGNDRXA9TXA10\n\n 1. Go to Arduino IDE. Files > Preferences.\n    \n    \n 2. Paste this URL in the Additional Board Manager URLs tab > OK\n    http://dan.drown.org/stm32duino/package_STM32duino_index.json\n    \n    \n    \n    (if there are some links already use the button to exoand the window then\n    paste the link.)\n    \n    \n 3. Go to Tools > Boards > Board Manager.\n    \n    \n\n\n\n 4. Search for stm. Click install.\n\n\n\n 5. Set settings as following for FTDI.\n\n\n\n 6. Select the COM port.\n\n * read the last steps before upload\n\nWith STLink\nonly few steps have to change from above. Im currently using a Windows Laptop.so\nsome of these steps may chang for Mac OS Laptops.\n\n * Download necessary drivers\n   [https://www.st.com/en/development-tools/stsw-link009.html] for STLink first.\n   Install it. When you plug the STLINK to your computer after that it may look\n   like this. ( for older STLinks use STSW-LINK007 )\n\n 1. Go to Arduino IDE. Files > Preferences.\n    \n    \n 2. Paste this URL in the Additional Board Manager URLs tab > OK\n    http://dan.drown.org/stm32duino/package_STM32duino_index.json\n    \n    \n    \n    (if there are some links already use the button to exoand the window then\n    paste the link.)\n    \n    \n 3. Go to Tools > Boards > Board Manager.\n    \n    \n\n\n\n 4. Search for stm. Click install.\n\n\n\n 5. Set settings as following for STLink.\n\n\n\n 6. Select the COM port.\n\nlast steps.\nHave you notices that, there are 2 male headers marked as BOOT0, BOOT1. Read\nthis part carefully. Using these 2 BOOT pins we can configure BOOT memories.\n\nBOOT1BOOT0BOOT MODEx0Main Flash memory01System memory11Embedded SRAMTo upload\ncode to flash memory ,\n\n * Set BOOT0 --> 1 | BOOT1 --> 0.\n\nAfter upload the code,\n\n * set BOOT0 --> 0 .\n   By this we only reprogram flash memory.\n\nWhy don't we upload codes via USB code directly ?\nsimple answer. Upload through USB require a Bootloader, which not include when\nwe purchase this MCU. Wecan flash the Bootloader by one of above methods. Then\nwe can use USB port for upload the code. I will upload descriptive article for\nthat task.\n\n> stay tuned","feature_image":"https://images.unsplash.com/photo-1553341640-6b28ff92098a?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDJ8fDMyJTIwYml0fGVufDB8fHw&ixlib=rb-1.2.1&q=80&w=2000","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-12-15 20:05:15","created_by":"1","updated_at":"2021-10-31 06:11:14","updated_by":"1","published_at":"2020-12-15 20:54:24","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd917171363b2018c5c951b","uuid":"7c9e22f2-2db2-4969-b23d-b46f24f41b09","title":"VScode for Arduino","slug":"vscode-for-arduino","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"**vscode** is a light weight **code editor**. It also have many capabilities. Apart from that I like its unique design with many colors. So I used to work with vscode like more than 3 months now. It has a rich ecosystem of extensions for other languages such as C++, C#, Java, Python and runtimes (such as .NET and Unity). I am basically use vscode for C, C++ and Python. Also I have set vscode as a [LaTEX](https://www.latex-project.org/) editor. I wanted to integrate Arduino things with vscode so that I can use one editor for almost everything I do.\\n\\n> Let me tell you how I did it.\\n\\nvscode have an extension for **PlatformIO**. So what is PlatformIO?\\n\\nPlatformIO is a cross-platform, cross-architecture, multiple framework, Professional tool for embedded systems engineers and for software developers who write applications for embedded products.\\n\\nLet's make it work.\\n\\n1. First you need **vscode installed** in your PC. If not try [this](https://code.visualstudio.com/Download).\\n2. Go to vscode.click on **extention icon**.\\n![vscode](/content/images/2020/12/vscode.jpg)\\n3. Search ```PlatformIO IDE``` there.\\n4. Click **install**. It may take a while. **Reopen** vscode.\\n ![vsc2](/content/images/2020/12/vsc2.jpg)\\n5. click on that little **home icon**. \\n*Now you have successfully installed PlatformIO.*\\n![plio](/content/images/2020/12/plio.jpg)\\n\\n\\nNow like always **try Blink** on PlatformIO.\\n\\n1. Go to New Project.\\n*     Give a proper project name.\\n*     Select the board you would like to upload this code.\\n*     Framework: Arduino\\n    *Note! if you want to save this somewhere else apartfrom default location untick the check box and set location where you want to save it.*\\n![plio3](/content/images/2020/12/plio3.jpg)\\n\\nThis process might take time.\\n![plio2](/content/images/2020/12/plio2.jpg)\\n\\n\\nGoto *src > main.cpp* . Here you have to code your main program. In this case similar to Arduino sketch. For Blink program code will be.......\\n\\n```\\n#include <Arduino.h>\\nvoid setup(){\\n    pinMode(LED_BUILTIN,OUTPUT);\\n}\\nvoid loop( {\\ndigitalWrite(LED_BUILTIN,HIGH);\\ndelay(1000);\\ndigitalWrite(LED_BUILTIN,LOW\\ndelay(1000);\\n}\\n```\\n\\nTo **compile** go to bottom left corner.\\n![plio5](/content/images/2020/12/plio5.jpg)\\n\\n( *After home icon left to right complie, upload, clean, Serial Monitor, Terminal* )\\n \\n\\n###Advantages of PlatformIO\\n\\n*     C/C++ Intelligent Code Completion\\n*     Smart Code Linter for the super-fast coding\\n*     Multi-projects workflow with Multiple Panes.\\n*     Themes Support with dark and light colors\\n*     Built-in Terminal with PlatformIO CLI tool\\n*     Library manager \\n*     Continuous integration\\n*     Support for 900+ Boards\\n\\n\\n From many features of PlatformIO, what I like the most is Organizing the necessary files super cool way. When I want to share my work with others all I want to do is upload the folder itself to place like Github.\\n  If I used arduino ide for that case I have to include all the libraries, Sketch and other.I have to manually organize things then. vscode + PlatformIO make things easy to work.\\n  \\n>  stay tuned for next article...\\n\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]],[1,\"p\",[]],[1,\"p\",[]],[1,\"p\",[]],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p><strong>vscode</strong> is a light weight <strong>code editor</strong>. It also have many capabilities. Apart from that I like its unique design with many colors. So I used to work with vscode like more than 3 months now. It has a rich ecosystem of extensions for other languages such as C++, C#, Java, Python and runtimes (such as .NET and Unity). I am basically use vscode for C, C++ and Python. Also I have set vscode as a <a href=\"https://www.latex-project.org/\">LaTEX</a> editor. I wanted to integrate Arduino things with vscode so that I can use one editor for almost everything I do.</p>\n<blockquote>\n<p>Let me tell you how I did it.</p>\n</blockquote>\n<p>vscode have an extension for <strong>PlatformIO</strong>. So what is PlatformIO?</p>\n<p>PlatformIO is a cross-platform, cross-architecture, multiple framework, Professional tool for embedded systems engineers and for software developers who write applications for embedded products.</p>\n<p>Let's make it work.</p>\n<ol>\n<li>First you need <strong>vscode installed</strong> in your PC. If not try <a href=\"https://code.visualstudio.com/Download\">this</a>.</li>\n<li>Go to vscode.click on <strong>extention icon</strong>.<br>\n<img src=\"/content/images/2020/12/vscode.jpg\" alt=\"vscode\"></li>\n<li>Search <code>PlatformIO IDE</code> there.</li>\n<li>Click <strong>install</strong>. It may take a while. <strong>Reopen</strong> vscode.<br>\n<img src=\"/content/images/2020/12/vsc2.jpg\" alt=\"vsc2\"></li>\n<li>click on that little <strong>home icon</strong>.<br>\n<em>Now you have successfully installed PlatformIO.</em><br>\n<img src=\"/content/images/2020/12/plio.jpg\" alt=\"plio\"></li>\n</ol>\n<p>Now like always <strong>try Blink</strong> on PlatformIO.</p>\n<ol>\n<li>Go to New Project.</li>\n</ol>\n<ul>\n<li>\n<pre><code>Give a proper project name.\n</code></pre>\n</li>\n<li>\n<pre><code>Select the board you would like to upload this code.\n</code></pre>\n</li>\n<li>\n<pre><code>Framework: Arduino\n</code></pre>\n<em>Note! if you want to save this somewhere else apartfrom default location untick the check box and set location where you want to save it.</em><br>\n<img src=\"/content/images/2020/12/plio3.jpg\" alt=\"plio3\"></li>\n</ul>\n<p>This process might take time.<br>\n<img src=\"/content/images/2020/12/plio2.jpg\" alt=\"plio2\"></p>\n<p>Goto <em>src &gt; main.cpp</em> . Here you have to code your main program. In this case similar to Arduino sketch. For Blink program code will be.......</p>\n<pre><code>#include &lt;Arduino.h&gt;\nvoid setup(){\n    pinMode(LED_BUILTIN,OUTPUT);\n}\nvoid loop( {\ndigitalWrite(LED_BUILTIN,HIGH);\ndelay(1000);\ndigitalWrite(LED_BUILTIN,LOW\ndelay(1000);\n}\n</code></pre>\n<p>To <strong>compile</strong> go to bottom left corner.<br>\n<img src=\"/content/images/2020/12/plio5.jpg\" alt=\"plio5\"></p>\n<p>( <em>After home icon left to right complie, upload, clean, Serial Monitor, Terminal</em> )</p>\n<h3 id=\"advantagesofplatformio\">Advantages of PlatformIO</h3>\n<ul>\n<li>\n<pre><code>C/C++ Intelligent Code Completion\n</code></pre>\n</li>\n<li>\n<pre><code>Smart Code Linter for the super-fast coding\n</code></pre>\n</li>\n<li>\n<pre><code>Multi-projects workflow with Multiple Panes.\n</code></pre>\n</li>\n<li>\n<pre><code>Themes Support with dark and light colors\n</code></pre>\n</li>\n<li>\n<pre><code>Built-in Terminal with PlatformIO CLI tool\n</code></pre>\n</li>\n<li>\n<pre><code>Library manager \n</code></pre>\n</li>\n<li>\n<pre><code>Continuous integration\n</code></pre>\n</li>\n<li>\n<pre><code>Support for 900+ Boards\n</code></pre>\n</li>\n</ul>\n<p>From many features of PlatformIO, what I like the most is Organizing the necessary files super cool way. When I want to share my work with others all I want to do is upload the folder itself to place like Github.<br>\nIf I used arduino ide for that case I have to include all the libraries, Sketch and other.I have to manually organize things then. vscode + PlatformIO make things easy to work.</p>\n<blockquote>\n<p>stay tuned for next article...</p>\n</blockquote>\n<!--kg-card-end: markdown--><p></p><p></p><p></p><p></p>","comment_id":"5fd917171363b2018c5c951b","plaintext":"vscode is a light weight code editor. It also have many capabilities. Apart from\nthat I like its unique design with many colors. So I used to work with vscode\nlike more than 3 months now. It has a rich ecosystem of extensions for other\nlanguages such as C++, C#, Java, Python and runtimes (such as .NET and Unity). I\nam basically use vscode for C, C++ and Python. Also I have set vscode as a LaTEX\n[https://www.latex-project.org/] editor. I wanted to integrate Arduino things\nwith vscode so that I can use one editor for almost everything I do.\n\n> Let me tell you how I did it.\n\n\nvscode have an extension for PlatformIO. So what is PlatformIO?\n\nPlatformIO is a cross-platform, cross-architecture, multiple framework,\nProfessional tool for embedded systems engineers and for software developers who\nwrite applications for embedded products.\n\nLet's make it work.\n\n 1. First you need vscode installed in your PC. If not try this\n    [https://code.visualstudio.com/Download].\n 2. Go to vscode.click on extention icon.\n    \n 3. Search PlatformIO IDE there.\n 4. Click install. It may take a while. Reopen vscode.\n    \n 5. click on that little home icon.\n    Now you have successfully installed PlatformIO.\n    \n\nNow like always try Blink on PlatformIO.\n\n 1. Go to New Project.\n\n * Give a proper project name.\n   \n   \n   \n * Select the board you would like to upload this code.\n   \n   \n   \n * Framework: Arduino\n   \n   \n   Note! if you want to save this somewhere else apartfrom default location\n   untick the check box and set location where you want to save it.\n   \n\nThis process might take time.\n\n\nGoto src > main.cpp . Here you have to code your main program. In this case\nsimilar to Arduino sketch. For Blink program code will be.......\n\n#include <Arduino.h>\nvoid setup(){\n    pinMode(LED_BUILTIN,OUTPUT);\n}\nvoid loop( {\ndigitalWrite(LED_BUILTIN,HIGH);\ndelay(1000);\ndigitalWrite(LED_BUILTIN,LOW\ndelay(1000);\n}\n\n\nTo compile go to bottom left corner.\n\n\n( After home icon left to right complie, upload, clean, Serial Monitor, Terminal \n)\n\nAdvantages of PlatformIO\n * C/C++ Intelligent Code Completion\n   \n   \n   \n * Smart Code Linter for the super-fast coding\n   \n   \n   \n * Multi-projects workflow with Multiple Panes.\n   \n   \n   \n * Themes Support with dark and light colors\n   \n   \n   \n * Built-in Terminal with PlatformIO CLI tool\n   \n   \n   \n * Library manager \n   \n   \n   \n * Continuous integration\n   \n   \n   \n * Support for 900+ Boards\n   \n   \n   \n\nFrom many features of PlatformIO, what I like the most is Organizing the\nnecessary files super cool way. When I want to share my work with others all I\nwant to do is upload the folder itself to place like Github.\nIf I used arduino ide for that case I have to include all the libraries, Sketch\nand other.I have to manually organize things then. vscode + PlatformIO make\nthings easy to work.\n\n> stay tuned for next article...","feature_image":"https://images.unsplash.com/photo-1590130382404-36dcbb666a3d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDl8fHZzY29kZXxlbnwwfHx8&ixlib=rb-1.2.1&q=80&w=2000","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-12-15 20:05:43","created_by":"1","updated_at":"2021-10-22 19:15:57","updated_by":"1","published_at":"2020-12-15 20:54:16","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5fd9174a1363b2018c5c951f","uuid":"188bd185-d486-472d-90e0-125f2b9d74f9","title":"Handful of LEDs","slug":"hand-full-of-leds","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","html":null,"comment_id":"5fd9174a1363b2018c5c951f","plaintext":null,"feature_image":"https://images.unsplash.com/photo-1573876568501-f41ab1a667af?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDYwfHxsZWR8ZW58MHx8fA&ixlib=rb-1.2.1&q=80&w=2000","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2020-12-15 20:06:34","created_by":"1","updated_at":"2021-05-12 15:03:32","updated_by":"1","published_at":"2020-12-15 20:54:28","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null}],"posts_meta":[{"id":"5fd7c9d9e73c930ae908ba4d","post_id":"5fd7c9d9e73c930ae908ba46","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":"getting started with arduino","meta_description":"complete guide for beginners. Learn Arduino today.Arduino is an open-source electronics platform based on easy-to-use hardware and software.... ","email_subject":null},{"id":"5fd7c9d9e73c930ae908ba51","post_id":"5fd7c9d9e73c930ae908ba47","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":"getting start to code in arduino ","meta_description":"complete guide for beginners. Learn Arduino today.Arduino is an open-source electronics platform based on easy-to-use hardware and software.... \n","email_subject":null},{"id":"5fd7c9d9e73c930ae908ba59","post_id":"5fd7c9d9e73c930ae908ba49","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":"Dark Theme for Arduino IDE","meta_description":"Bored with regular IDE. Try this","email_subject":null}],"users":[{"id":"1","name":"Chamath Shamal","slug":"chamath","password":"$2a$10$w7tI2Zy7fhMjFBsRhd3a2Of5RcAjJe6rAyuQVt4/AtxjpxkMSsPgO","email":"chamathshamal31@gmail.com","profile_image":"/content/images/2021/10/79373047_1873608092786010_2407857463270309888_n.jpg","cover_image":"/content/images/2020/12/simon-abrams-k_T9Zj3SE8k-unsplash.jpg","bio":"Dedicated For Electronic Enthusiasts","website":null,"location":"#LKA","facebook":"chamath.shamal","twitter":"@chamath_shamal","accessibility":"{\"whatsNew\":{\"lastSeenDate\":\"2021-10-11T18:11:15.000+00:00\"},\"nightShift\":true}","status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":"[\"upload-a-theme\",\"getting-started\"]","last_seen":"2021-11-10 23:19:29","created_at":"2020-12-14 20:09:03","created_by":"1","updated_at":"2021-11-10 23:19:29","updated_by":"1"},{"id":"5951f5fca366002ebd5dbef7","name":"Ghost","slug":"ghost","password":"$2a$10$IjcngB.w1Dpw2dr0qLsiL..H.V6mU0W7kkE3ZtvLaqLpo623WfWHi","email":"ghost-author@example.com","profile_image":"https://static.ghost.org/v3.0.0/images/ghost.png","cover_image":null,"bio":"You can delete this user to remove all the welcome posts","website":"https://ghost.org","location":"The Internet","facebook":"ghost","twitter":"ghost","accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2020-12-14 20:09:03","created_by":"1","updated_at":"2020-12-14 20:09:03","updated_by":"1"}],"posts_authors":[{"id":"5fd7c9d9e73c930ae908ba4c","post_id":"5fd7c9d9e73c930ae908ba46","author_id":"1","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba50","post_id":"5fd7c9d9e73c930ae908ba47","author_id":"1","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba54","post_id":"5fd7c9d9e73c930ae908ba48","author_id":"1","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba58","post_id":"5fd7c9d9e73c930ae908ba49","author_id":"1","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba5c","post_id":"5fd7c9d9e73c930ae908ba4a","author_id":"1","sort_order":0},{"id":"5fd8cee811120f006f320fa2","post_id":"5fd8cee711120f006f320fa1","author_id":"1","sort_order":0},{"id":"5fd916d91363b2018c5c9513","post_id":"5fd916d91363b2018c5c9512","author_id":"1","sort_order":0},{"id":"5fd916fb1363b2018c5c9518","post_id":"5fd916fb1363b2018c5c9517","author_id":"1","sort_order":0},{"id":"5fd917181363b2018c5c951c","post_id":"5fd917171363b2018c5c951b","author_id":"1","sort_order":0},{"id":"5fd9174a1363b2018c5c9520","post_id":"5fd9174a1363b2018c5c951f","author_id":"1","sort_order":0}],"roles":[{"id":"5fd7c65e36b8d7010dc726fc","name":"Administrator","description":"Administrators","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc726fd","name":"Editor","description":"Editors","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc726fe","name":"Author","description":"Authors","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc726ff","name":"Contributor","description":"Contributors","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc72700","name":"Owner","description":"Blog Owner","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc72701","name":"Admin Integration","description":"External Apps","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc72702","name":"DB Backup Integration","description":"Internal DB Backup Client","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c65e36b8d7010dc72703","name":"Scheduler Integration","description":"Internal Scheduler Client","created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"}],"roles_users":[{"id":"5fd7c66036b8d7010dc72754","role_id":"5fd7c65e36b8d7010dc726fe","user_id":"5951f5fca366002ebd5dbef7"},{"id":"5fd7c66136b8d7010dc7284b","role_id":"5fd7c65e36b8d7010dc72700","user_id":"1"}],"settings":[{"id":"5fd7c66636b8d7010dc7284c","group":"core","key":"db_hash","value":"9dc5f35c-12be-4ea4-8617-07559a07f547","type":"string","flags":null,"created_at":"2020-12-14 20:09:10","created_by":"1","updated_at":"2020-12-14 20:09:10","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7284d","group":"core","key":"routes_hash","value":"3d180d52c663d173a6be791ef411ed01","type":"string","flags":null,"created_at":"2020-12-14 20:09:10","created_by":"1","updated_at":"2020-12-14 20:09:36","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7284e","group":"core","key":"next_update_check","value":"1636672770","type":"number","flags":null,"created_at":"2020-12-14 20:09:10","created_by":"1","updated_at":"2021-11-10 23:19:28","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7284f","group":"core","key":"notifications","value":"[{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"a3bf0f30-7172-11eb-8aca-f3853533f7a4\",\"custom\":false,\"createdAt\":\"2021-02-17T22:51:15.000Z\",\"type\":\"info\",\"top\":false,\"message\":\"Ghost <a href=\\\"https://github.com/TryGhost/Ghost/releases\\\">3.41.6</a> has been released, <a href=\\\"https://ghost.org/update/?v=3.40.1\\\">click here</a> to upgrade.\",\"seen\":false,\"addedAt\":\"2021-02-22T17:51:47.830Z\"},{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"a099ef71-1af5-4f24-87b5-ed3029891c96\",\"custom\":true,\"createdAt\":\"2021-09-23T10:34:41.000Z\",\"type\":\"alert\",\"top\":false,\"message\":\"Critical security update available — please update Ghost as soon as possible. <a href=\\\"https://github.com/TryGhost/Ghost/security/advisories/GHSA-65p7-pjj8-ggmr\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Details here.</a>\",\"seen\":true,\"addedAt\":\"2021-10-03T04:02:11.342Z\",\"seenBy\":[\"1\"]},{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"130f7c24-113a-4768-a698-12a8b34223f5\",\"custom\":true,\"createdAt\":\"2021-03-16T12:55:20.000Z\",\"type\":\"info\",\"top\":true,\"message\":\"<strong>Ghost 4.0 is now available</strong> - You are using an old version of Ghost, which means you don't have access to the latest features. <a href=\\\"https://ghost.org/changelog/4/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Read more!</a>\",\"seen\":true,\"addedAt\":\"2021-10-31T06:02:07.440Z\",\"seenBy\":[\"1\"]}]","type":"array","flags":null,"created_at":"2020-12-14 20:09:10","created_by":"1","updated_at":"2021-10-31 06:02:35","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72850","group":"core","key":"session_secret","value":"43d67afcac8a7aa986d21ef4d9596c6fb5ce1276268920bbdb89c7b3f1890082","type":"string","flags":null,"created_at":"2020-12-14 20:09:10","created_by":"1","updated_at":"2020-12-14 20:09:10","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72851","group":"core","key":"theme_session_secret","value":"6bef139a58082d8f33018c4d006d28b602ad19f76df23789cb1f53a3e5a1f6b2","type":"string","flags":null,"created_at":"2020-12-14 20:09:11","created_by":"1","updated_at":"2020-12-14 20:09:11","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72852","group":"core","key":"ghost_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAI/9SboiVINS9qEpp1hFcDguaD1irTVRHWeZ3XGMsOf3nQd+H9dZVdqUKJ1+uCEV\nFManB+hKiRGtC6FhGQ1hlqmHbbO+Kfn+XXEbE6wX/0CtI+SFsiEdIc1u5NN9/IwukFxDj2U0\nysN1Ny6yO6OFnLgH60Z/KZWsX3YHiicBsCMFAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"string","flags":null,"created_at":"2020-12-14 20:09:11","created_by":"1","updated_at":"2020-12-14 20:09:11","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72853","group":"core","key":"ghost_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQCP/Um6IlSDUvahKadYRXA4Lmg9Yq01UR1nmd1xjLDn950Hfh/XWVXalCid\nfrghFRTGpwfoSokRrQuhYRkNYZaph22zvin5/l1xGxOsF/9ArSPkhbIhHSHNbuTTffyMLpBc\nQ49lNMrDdTcusjujhZy4B+tGfymVrF92B4onAbAjBQIDAQABAoGAMYofl57AHP6qRACkxsX9\nOhcdXiFZHoLt7vsNKUgShXy31iAarGjcFPvsjWNPznIGV+KX4d/jEOXMnpVdnTD6OIynwLYd\nIPeZ6hLl4MftgDB69KL3I3EyRpOlRUUdmv06zi1aR69LIrLoWpaiTREXugGRLjMJJORvVMMb\njD8pqnECQQDWdKotIp4sY6m7k6PRA0q4yJOaEi/KACueNyEuNzpE72i9PZUcn/AptqnvdjtY\nSEXG6LnfharfdHcCNG46clLnAkEAq+IK0SH7WiPneMBAbyZgVmptJXCMXXdgcTgzFEp5Keo2\nDgMZJeVRqNbJ5IyY3jWTKiFjYpDMciHjbT00l5SJMwJBAJapm6zd9zXERshrLtl2cJZlA51o\nTX6ipAIhRQRM9HjdoT3h99IGYxlLJRQAgizBiZP2iC8Kn0MhdUJtR0t0ad0CQQCX+AtITJtH\nX2dQw+o0W+Hhhcdqys/P87Q5Zk8DKbVm8cVJLkQV1WMVvJJUmFqwXP34yfxtMUkRwBSsiOju\n/E0xAkB5LQY6CiwMRffCblbMlrnZ00Cfvb+1F3DJOCBsMiQwqJGsxeikc511eETLXTYHN5+c\nAgcga23AZGJUdxf/p3Gu\n-----END RSA PRIVATE KEY-----\n","type":"string","flags":null,"created_at":"2020-12-14 20:09:11","created_by":"1","updated_at":"2020-12-14 20:09:11","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72854","group":"core","key":"members_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAJmFUBoTWbV2JMxNdhSR/Vfnh6te6ojCtSPqHNRGUHjiD4L91Q43rWh4WmSMAhxU\nfefzn395PqLUdoLXzRxk5QR1caiPeIFDwgL8ehdFbhoHb7vwQrMqkneN9NIbERD4+857RXkR\nvhh6f4eDTASRE8dI4e02YWcZJauUEkDUDAJFAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"string","flags":null,"created_at":"2020-12-14 20:09:11","created_by":"1","updated_at":"2020-12-14 20:09:11","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72855","group":"core","key":"members_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICWwIBAAKBgQCZhVAaE1m1diTMTXYUkf1X54erXuqIwrUj6hzURlB44g+C/dUON61oeFpk\njAIcVH3n859/eT6i1HaC180cZOUEdXGoj3iBQ8IC/HoXRW4aB2+78EKzKpJ3jfTSGxEQ+PvO\ne0V5Eb4Yen+Hg0wEkRPHSOHtNmFnGSWrlBJA1AwCRQIDAQABAoGAde5a4i0LNMJU8jxvAM5E\n90n8hkCbmgM4cyZcjxSUrMe7crza9dj/dMk/Zw3GcUzWi2AynhHdc+gSQeDUx4MaCWfGPGuu\n+5fjhKkGCBzwBUFZHBKw9XVEf0cdXrWKzJKv6Ro51RotPIDg+tGkjVxI77IdQwk/kBR3TdnI\nvZzQCAECQQDhDbKQVP4xhOLNZWWJavfpgnaY3Kb1wUle3G6wIgt+m61U54gUeiwsoRT+UCg3\nEywI2M/GjNeZ0Pk72vcAt7dBAkEArqGHf+ooHcF5x3RzEmqH7qoz1GIPbdc3+DGz09cM0DAR\nJtcXFhF8hliCc+bAubs6AlbegyPhSN0BA7CZfVfuBQJAJEpZKP0LoGCVUhmvreEZ6QWoqi2q\nnqZ0dl+FWdGjmN7xrGdJgkPRK8Et6XRzh64Hw8Vye8nqWltgVU6R1gPKAQJAdYJ0b3rdq8g5\nbiHKHSZaehtF7TBfOYaNPxIS9AXNtXni0MQD4PG7XZvJjLxGC7UU/+X8rTpDqogs2pLHdjTp\nEQJAAuC4wsbRws91oVKL3NqHEKUseUhQf5UeVXWNcWVdnYnlQ3gtY336SakI5LWIuzwIh+wj\n+3YKMtwivcpellhbJQ==\n-----END RSA PRIVATE KEY-----\n","type":"string","flags":null,"created_at":"2020-12-14 20:09:11","created_by":"1","updated_at":"2020-12-14 20:09:11","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72856","group":"core","key":"members_email_auth_secret","value":"223771499360186237000dfd5b221de33d1e02e0f61bab1bd1c25ffda24ba2620d766b4510d32ee9953b42d6e79af1659654111185deb6b473c4bc2a13f64daf","type":"string","flags":null,"created_at":"2020-12-14 20:09:11","created_by":"1","updated_at":"2020-12-14 20:09:11","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72859","group":"site","key":"title","value":"CSham's Blog","type":"string","flags":"PUBLIC","created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2021-10-03 07:55:25","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7285a","group":"site","key":"description","value":"Personal Blog | Sharing Experience","type":"string","flags":"PUBLIC","created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:17:57","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7285b","group":"site","key":"logo","value":null,"type":"string","flags":"PUBLIC","created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2021-10-04 23:35:55","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7285c","group":"site","key":"cover_image","value":"/content/images/2021/11/Cover-2.png","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2021-11-10 23:20:01","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7285d","group":"site","key":"icon","value":"/content/images/2021/10/Logo-1.png","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2021-10-04 23:35:33","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7285e","group":"site","key":"accent_color","value":"#0080ff","type":"string","flags":"PUBLIC","created_at":"2020-12-12 22:20:02","created_by":"1","updated_at":"2020-12-15 19:00:27","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7285f","group":"site","key":"lang","value":"en","type":"string","flags":null,"created_at":"2020-12-12 22:20:02","created_by":"1","updated_at":"2020-12-12 22:20:02","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72860","group":"site","key":"timezone","value":"Asia/Kolkata","type":"string","flags":null,"created_at":"2020-12-12 22:20:02","created_by":"1","updated_at":"2020-12-12 22:20:02","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72861","group":"site","key":"codeinjection_head","value":"<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/themes/prism.min.css\" />\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-171097085-1 \"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', 'UA-171097085-1');\n</script>\n\n","type":"string","flags":null,"created_at":"2020-12-12 22:20:03","created_by":"1","updated_at":"2020-12-15 20:54:56","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72862","group":"site","key":"codeinjection_foot","value":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/prism.min.js\"></script>\n","type":"string","flags":null,"created_at":"2020-12-12 22:20:03","created_by":"1","updated_at":"2020-12-12 22:20:03","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72863","group":"site","key":"facebook","value":"chamath.shamal/","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:17:57","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72864","group":"site","key":"twitter","value":"@chamath_shamal","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:17:57","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72865","group":"site","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"/\"},{\"label\":\"Arduino\",\"url\":\"/tag/arduino/\"},{\"label\":\"IoT\",\"url\":\"/tag/iot/\"},{\"label\":\"Author\",\"url\":\"/author/chamath/\"}]","type":"array","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-12-24 19:37:33","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72866","group":"site","key":"secondary_navigation","value":"[{\"label\":\"linkedin\",\"url\":\"https://www.linkedin.com/in/chamath-shamal/\"},{\"label\":\"github\",\"url\":\"https://github.com/CSham31\"},{\"label\":\"tumblr\",\"url\":\"https://www.tumblr.com/blog/csham31\"},{\"label\":\"facebook\",\"url\":\"https://www.facebook.com/chamath.shamal\"},{\"label\":\"twitter\",\"url\":\"https://twitter.com/chamath_shamal\"}]","type":"array","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-07-27 14:00:36","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72867","group":"site","key":"meta_title","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72868","group":"site","key":"meta_description","value":"Electronics | Arduino | DIY ","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:17:57","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72869","group":"site","key":"og_image","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7286a","group":"site","key":"og_title","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7286b","group":"site","key":"og_description","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7286c","group":"site","key":"twitter_image","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7286d","group":"site","key":"twitter_title","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7286e","group":"site","key":"twitter_description","value":null,"type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7286f","group":"theme","key":"active_theme","value":"Alto-master","type":"string","flags":"RO","created_at":"2020-12-14 20:09:13","created_by":"1","updated_at":"2021-11-10 23:31:55","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72870","group":"private","key":"is_private","value":"false","type":"boolean","flags":null,"created_at":"2020-12-14 20:09:13","created_by":"1","updated_at":"2020-12-14 20:09:13","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72871","group":"private","key":"password","value":"","type":"string","flags":null,"created_at":"2020-12-14 20:09:13","created_by":"1","updated_at":"2020-12-14 20:09:13","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72872","group":"private","key":"public_hash","value":"54931f1e6572ecfffef27f895fda90","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72873","group":"members","key":"default_content_visibility","value":"public","type":"string","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72874","group":"members","key":"members_allow_free_signup","value":"true","type":"boolean","flags":null,"created_at":"2020-12-12 22:20:03","created_by":"1","updated_at":"2020-12-12 22:20:03","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72875","group":"members","key":"members_from_address","value":"noreply","type":"string","flags":"RO","created_at":"2020-12-14 20:09:14","created_by":"1","updated_at":"2020-12-14 20:09:14","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72876","group":"members","key":"members_support_address","value":"noreply","type":"string","flags":"PUBLIC,RO","created_at":"2020-12-14 20:09:14","created_by":"1","updated_at":"2020-12-14 20:09:14","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72877","group":"members","key":"members_reply_address","value":"newsletter","type":"string","flags":null,"created_at":"2020-12-12 22:20:04","created_by":"1","updated_at":"2020-12-12 22:20:04","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72878","group":"members","key":"members_free_signup_redirect","value":"/","type":"string","flags":null,"created_at":"2020-12-12 22:20:04","created_by":"1","updated_at":"2020-12-12 22:20:04","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72879","group":"members","key":"members_paid_signup_redirect","value":"/","type":"string","flags":null,"created_at":"2020-12-12 22:20:04","created_by":"1","updated_at":"2020-12-12 22:20:04","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7287a","group":"members","key":"stripe_product_name","value":"Ghost Subscription","type":"string","flags":null,"created_at":"2020-12-12 22:20:04","created_by":"1","updated_at":"2020-12-12 22:20:04","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7287d","group":"members","key":"stripe_plans","value":"[{\"name\":\"Monthly\",\"currency\":\"usd\",\"interval\":\"month\",\"amount\":0},{\"name\":\"Yearly\",\"currency\":\"usd\",\"interval\":\"year\",\"amount\":0}]","type":"array","flags":null,"created_at":"2020-12-12 22:20:05","created_by":"1","updated_at":"2020-12-12 22:20:05","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72880","group":"members","key":"stripe_connect_livemode","value":null,"type":"boolean","flags":null,"created_at":"2020-12-12 22:20:05","created_by":"1","updated_at":"2020-12-12 22:20:05","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72881","group":"members","key":"stripe_connect_display_name","value":null,"type":"string","flags":null,"created_at":"2020-12-12 22:20:05","created_by":"1","updated_at":"2020-12-12 22:20:05","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72883","group":"portal","key":"portal_name","value":"true","type":"boolean","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72884","group":"portal","key":"portal_button","value":"true","type":"boolean","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-12-15 19:00:28","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72885","group":"portal","key":"portal_plans","value":"[\"free\",\"monthly\",\"yearly\"]","type":"array","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:17:57","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72886","group":"portal","key":"portal_button_style","value":"icon-only","type":"string","flags":null,"created_at":"2020-12-12 22:20:06","created_by":"1","updated_at":"2020-12-15 19:00:28","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72887","group":"portal","key":"portal_button_icon","value":"icon-5","type":"string","flags":null,"created_at":"2020-12-12 22:20:06","created_by":"1","updated_at":"2020-12-15 19:00:28","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72888","group":"portal","key":"portal_button_signup_text","value":"Subscribe","type":"string","flags":null,"created_at":"2020-12-12 22:20:06","created_by":"1","updated_at":"2020-12-12 22:20:06","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72889","group":"email","key":"mailgun_domain","value":null,"type":"string","flags":null,"created_at":"2020-12-12 22:20:06","created_by":"1","updated_at":"2020-12-12 22:20:06","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7288a","group":"email","key":"mailgun_api_key","value":null,"type":"string","flags":null,"created_at":"2020-12-12 22:20:06","created_by":"1","updated_at":"2020-12-12 22:20:06","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7288b","group":"email","key":"mailgun_base_url","value":null,"type":"string","flags":null,"created_at":"2020-12-12 22:20:07","created_by":"1","updated_at":"2020-12-12 22:20:07","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7288c","group":"email","key":"email_track_opens","value":"true","type":"boolean","flags":null,"created_at":"2020-12-12 22:20:07","created_by":"1","updated_at":"2020-12-12 22:20:07","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7288d","group":"amp","key":"amp","value":"true","type":"boolean","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7288e","group":"amp","key":"amp_gtag_id","value":"UA-171097085-1","type":"string","flags":null,"created_at":"2020-12-12 22:20:07","created_by":"1","updated_at":"2020-12-15 19:08:00","updated_by":"1"},{"id":"5fd7c66636b8d7010dc7288f","group":"labs","key":"labs","value":"{\"members\":false}","type":"object","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-12-15 19:06:05","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72890","group":"slack","key":"slack","value":"[]","type":"array","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-12-15 18:58:54","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72891","group":"unsplash","key":"unsplash","value":"{\"isActive\":true}","type":"object","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:17:57","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72892","group":"views","key":"shared_views","value":"{}","type":"array","flags":null,"created_at":"2020-06-26 22:07:30","created_by":"1","updated_at":"2020-06-26 22:07:30","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72893","group":"newsletter","key":"newsletter_show_badge","value":"true","type":"boolean","flags":null,"created_at":"2020-12-12 22:20:07","created_by":"1","updated_at":"2020-12-12 22:20:07","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72894","group":"newsletter","key":"newsletter_show_header","value":"false","type":"boolean","flags":null,"created_at":"2020-12-12 22:20:07","created_by":"1","updated_at":"2020-12-15 19:04:04","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72895","group":"newsletter","key":"newsletter_body_font_category","value":"serif","type":"string","flags":null,"created_at":"2020-12-12 22:20:08","created_by":"1","updated_at":"2020-12-15 19:04:04","updated_by":"1"},{"id":"5fd7c66636b8d7010dc72896","group":"newsletter","key":"newsletter_footer_content","value":null,"type":"string","flags":null,"created_at":"2020-12-12 22:20:08","created_by":"1","updated_at":"2020-12-12 22:20:08","updated_by":"1"},{"id":"609c0086386c1f045b9191b6","group":"firstpromoter","key":"firstpromoter","value":"false","type":"boolean","flags":null,"created_at":"2021-05-12 16:21:26","created_by":"1","updated_at":"2021-05-12 16:21:26","updated_by":"1"},{"id":"609c0086386c1f045b9191b7","group":"firstpromoter","key":"firstpromoter_id","value":null,"type":"string","flags":null,"created_at":"2021-05-12 16:21:26","created_by":"1","updated_at":"2021-05-12 16:21:26","updated_by":"1"}],"tags":[{"id":"5fd7c65e36b8d7010dc726fb","name":"Getting Started","slug":"getting-started","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-14 20:09:02","created_by":"1","updated_at":"2020-12-14 20:09:02","updated_by":"1"},{"id":"5fd7c9d4e73c930ae908ba41","name":"Functions","slug":"functions","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-06-27 08:07:15","created_by":"1","updated_at":"2020-06-27 08:07:15","updated_by":null},{"id":"5fd7c9d4e73c930ae908ba40","name":"Arduino","slug":"arduino","description":"Easy Guide to Arduino","feature_image":"https://images.unsplash.com/photo-1562976540-78c559c80296?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-06-27 07:39:43","created_by":"1","updated_at":"2020-06-27 10:12:42","updated_by":null},{"id":"5fd7c9d4e73c930ae908ba44","name":"Theme","slug":"theme","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-06-28 06:46:38","created_by":"1","updated_at":"2020-06-28 06:46:38","updated_by":null},{"id":"5fd7c9d4e73c930ae908ba42","name":"variables","slug":"variables","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-06-27 18:01:33","created_by":"1","updated_at":"2020-06-27 18:01:33","updated_by":null},{"id":"5fd7c9d4e73c930ae908ba45","name":"structures","slug":"structures","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-27 06:06:28","created_by":"1","updated_at":"2020-07-27 06:06:28","updated_by":null},{"id":"5fd91e9d1363b2018c5c9528","name":"stm32","slug":"stm32","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-15 20:37:49","created_by":"1","updated_at":"2020-12-15 20:37:49","updated_by":"1"},{"id":"5fd91fbf1363b2018c5c952f","name":"esp8266","slug":"esp8266","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-15 20:42:39","created_by":"1","updated_at":"2020-12-15 20:42:39","updated_by":"1"},{"id":"5fd91fbf1363b2018c5c9530","name":"nodemcu","slug":"nodemcu","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-15 20:42:39","created_by":"1","updated_at":"2020-12-15 20:42:39","updated_by":"1"},{"id":"5fd9200d1363b2018c5c953c","name":"platformio","slug":"platformio","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-15 20:43:57","created_by":"1","updated_at":"2020-12-15 20:43:57","updated_by":"1"},{"id":"5fd9200d1363b2018c5c953d","name":"vscode","slug":"vscode","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-15 20:43:57","created_by":"1","updated_at":"2020-12-15 20:43:57","updated_by":"1"},{"id":"5fe4decb6be4e6006f634bf7","name":"IoT","slug":"iot","description":"Internet of Things","feature_image":"https://images.unsplash.com/photo-1545259742-b4fd8fea67e4?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDE1fHxJb1R8ZW58MHx8fA&ixlib=rb-1.2.1&q=80&w=2000","parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-12-24 18:32:43","created_by":"1","updated_at":"2020-12-24 21:32:45","updated_by":"1"}],"posts_tags":[{"id":"5fd7c9d9e73c930ae908ba4b","post_id":"5fd7c9d9e73c930ae908ba46","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba4e","post_id":"5fd7c9d9e73c930ae908ba47","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba4f","post_id":"5fd7c9d9e73c930ae908ba47","tag_id":"5fd7c9d4e73c930ae908ba41","sort_order":1},{"id":"5fd7c9d9e73c930ae908ba52","post_id":"5fd7c9d9e73c930ae908ba48","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba53","post_id":"5fd7c9d9e73c930ae908ba48","tag_id":"5fd7c9d4e73c930ae908ba42","sort_order":1},{"id":"5fd7c9d9e73c930ae908ba55","post_id":"5fd7c9d9e73c930ae908ba49","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba57","post_id":"5fd7c9d9e73c930ae908ba49","tag_id":"5fd7c9d4e73c930ae908ba44","sort_order":2},{"id":"5fd7c9d9e73c930ae908ba5a","post_id":"5fd7c9d9e73c930ae908ba4a","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd7c9d9e73c930ae908ba5b","post_id":"5fd7c9d9e73c930ae908ba4a","tag_id":"5fd7c9d4e73c930ae908ba45","sort_order":1},{"id":"5fd917a21363b2018c5c9525","post_id":"5fd9174a1363b2018c5c951f","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd91e9d1363b2018c5c9529","post_id":"5fd916fb1363b2018c5c9517","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd91e9d1363b2018c5c952a","post_id":"5fd916fb1363b2018c5c9517","tag_id":"5fd91e9d1363b2018c5c9528","sort_order":1},{"id":"5fd91fbf1363b2018c5c9533","post_id":"5fd916d91363b2018c5c9512","tag_id":"5fd91fbf1363b2018c5c9530","sort_order":1},{"id":"5fd91fbf1363b2018c5c9532","post_id":"5fd916d91363b2018c5c9512","tag_id":"5fd91fbf1363b2018c5c952f","sort_order":0},{"id":"5fd9200d1363b2018c5c953e","post_id":"5fd917171363b2018c5c951b","tag_id":"5fd7c9d4e73c930ae908ba40","sort_order":0},{"id":"5fd9200d1363b2018c5c953f","post_id":"5fd917171363b2018c5c951b","tag_id":"5fd9200d1363b2018c5c953c","sort_order":1},{"id":"5fd9200d1363b2018c5c9540","post_id":"5fd917171363b2018c5c951b","tag_id":"5fd9200d1363b2018c5c953d","sort_order":2},{"id":"5fe4decb6be4e6006f634bf8","post_id":"5fd916d91363b2018c5c9512","tag_id":"5fe4decb6be4e6006f634bf7","sort_order":2}]}}